// tab 管理模块
var Hutils = {
    cancelBubble:function () {
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent();
            if (event != null) {
                event.stopPropagation()
            }
        }
    },
    getFrist:function (value) {
        var tmp = value.split("__mf__");
        if (tmp.length==2){
            return tmp[0];
        }
        return value;
    },
    getLast:function (value) {
        var tmp = value.split("__mf__");
        if (tmp.length==2){
            return tmp[1];
        }
        return value;
    },
    joinCode:function (str1, str2) {
        return str1 + "__mf__" + str2;
    },
    rowStyle:function(row,index) {
        return {css:{
            "white-space":"nowrap",
            "text-overflow":"ellipsis"
        }}
    },
    // 隐藏子菜单系统，切换具体页面内容
    hideWrapper:function(){
        $("#wrapper").removeClass("animated slideInUp slideOutDown");
        $("#wrapper").addClass("animated slideOutDown");
        $("#h-main-content").removeClass("animated slideInDown slideOutUp");
        $("#h-main-content").addClass("animated slideInDown");
    },
    // 隐藏内容显示部分，切换到子菜单系统
    showWrapper:function() {
        $("#h-main-content").removeClass("animated slideInDown slideOutUp");
        $("#h-main-content").addClass("animated slideOutUp");
        $("#wrapper").removeClass("animated slideInUp slideOutDown");
        $("#wrapper").addClass("animated slideInUp")
    },
    // 判断子菜单系统显示状态，如果是隐藏，则切换到显示，如果是显示，则隐藏。
    HchangeWrapper:function(){
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent()
            event.stopPropagation()
        }
        if ($(".H-tabs-index").html()==""){
            $.Notify({
                title:"温馨提示：",
                message:"目前没有已经打开的页面",
                type:"info",
            });
            return
        };

        // 判断子系统菜单也距离底部的位置，如果距离底部的位置是0，则隐藏子菜单系统，否则显示子菜单系统
        if ($("#wrapper").hasClass("slideInUp")){
            Hutils.hideWrapper()
        }else{
            Hutils.showWrapper()
        }
    },
    InitDomain:function(param){
        var __DEFAULT = {
            id:"",
            height:"30px",
            width:"auto",
            onclick:function(){
                console.log("no click");
            },
            callback:function(){

            },
        }

        $.extend(true,__DEFAULT,param);

        $.getJSON("/auth/privilege/user/domain",function(data){
            var arr = new Array();
            var domainId = "";
            $(data).each(function(index,element){
                var ijs = {};
                ijs.id=element.domainId;
                ijs.text=element.domainDesc;
                ijs.parentId="####mf###";
                arr.push(ijs)
            });
            if (arr.length != 0){
                domainId = arr[0].id;
            }
            $(__DEFAULT.id).Hselect({
                data:arr,
                height:__DEFAULT.height,
                width:__DEFAULT.width,
                value:domainId,
                onclick:__DEFAULT.onclick,
            });
            __DEFAULT.callback(domainId);
        });
    },
    ShowCannotEditTips:function(obj){
        $(obj).tooltip({
            title:"亲,此处无法编辑哟"
        }).tooltip("show")
    },
    // 跳转到首页系统菜单。
    H_HomePage:function(){
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent()
            event.stopPropagation()
        }
        window.location.href = "/auth/home";
    },
    // 退出登录
    HLogOut:function(){
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent()
            event.stopPropagation()
        }
        $.Hconfirm({
            callback:function(){
                $.ajax({type:"Get",url:"/auth/logout",cache:!1,async:!1,dataType:"text",
                    error:function(){window.location.href="/"},
                    success:function(a){
                        $.Notify({
                            message:"安全退出",
                            type:"success",
                        });
                        window.location.href="/"}
                })
            },
            body:"点击确定退出系统"
        })
    },
    modifyThemeInfo:function () {
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent()
            event.stopPropagation()
        }

        $.Hmodal({
            body:$("#mas-modify-theme").html(),
            footerBtnStatus:false,
            height:"420px",
            width:"720px",
            header:"切换主题",
            preprocess:function () {

            }
        });
    },
    // 用户信息管理
    UserMgrInfo:function(){
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            // firefox
            var event = Hutils.getEvent()
            event.stopPropagation()
        }

        $.Hmodal({
            body:$("#mas-passwd-prop").html(),
            footerBtnStatus:false,
            height:"420px",
            width:"720px",
            header:"用户信息",
            preprocess:function () {
                $.getJSON("/auth/user/query",function (data) {
                    $(data).each(function (index, element) {
                        $("#h-user-details-user-id").html(element.account)
                        $("#h-user-details-user-name").html(element.name)
                        $("#h-user-details-user-email").html(element.email)
                        $("#h-user-details-user-phone").html(element.phone)

                        $("#h-user-details-user-org-name").html(element.org_unit_desc)
                        // $("#h-user-details-user-domain").html(element.domain_id)
                        // $("#h-user-details-user-domain-name").html(element.domain_name)
                        $("#h-user-details-user-create").html(element.createUserId)
                        $("#h-user-details-user-create-date").html(element.createTime)
                        $("#h-user-details-user-modify").html(element.updateUserId)
                        $("#h-user-details-user-modify-date").html(element.updateTime)
                        // 机构编码处理
                        var upcombine = element.org_unit_id.split("_join_")
                        if (upcombine.length==2){
                            $("#h-user-details-user-org").html(upcombine[1])
                        }else{
                            $("#h-user-details-user-org").html(upcombine)
                        }
                    })
                });
            }
        });
    },
    // 子系统中，打开具体页面按钮
    goEntrySubSystem:function(e){
        var flag = false;

        // 资源的url地址
        var url = $(e).attr("data-url");

        // 资源的id
        var data_id = $(e).attr("data-id");

        // 资源的名称
        var name = $(e).find("div:last").html();

        var newIframe = $(e).attr("data-iframe");

        if ($(e).attr("data-openType") == "1") {
            window.open(url,name)
            return
        }
        NProgress.start();

        // 遍历整个tab栏目，查找指定id的资源是否打开，
        // 如果该资源已经打开，则直接切换到该资源，无需从后台获取内容
        // 如果该资源没有打开，则将flag为false，从后台获取资源内容
        $(".H-tabs-index").find("span").each(function(index,element){
            // 如果资源存在，直接切换到这个资源的tab中。
            if (data_id == $(element).attr("data-id")){
                Hutils.__changetab(element)
                flag = true;
                return false;
            }
        });

        // 资源未打开，从后台请求资源信息
        if (flag == false){
            $.HAjaxRequest({
                type:"get",
                url:url,
                cache:false,
                async:true,
                dataType:"text",
                error:function (msg) {
                    console.log(msg);
                    NProgress.done();
                    var m = JSON.parse(msg);
                    $.Notify({
                        title:"温馨提示:",
                        message:m.error_msg,
                        type:"danger",
                    });
                    return
                },
                success: function(data){

                    // 隐藏内容显示区域
                    $("#h-main-content").find("div.active")
                        .removeClass("active").addClass("none");

                    var newContent = document.createElement("div")
                    $(newContent).attr({
                        "data-type":"frame",
                        "data-id":data_id,
                    }).css({
                        "padding":"0px",
                        "margin":"0px",
                    }).addClass("active");

                    if (newIframe == true || newIframe == "true"){
                        var iframe = document.createElement("iframe");
                        iframe.width = (document.documentElement.clientWidth) +"px";
                        iframe.height = (document.documentElement.clientHeight - 36)+"px";
                        iframe.srcdoc = data;
                        iframe.frameBorder = 0;
                        newContent.appendChild(iframe);
                    } else {
                        newContent.style.paddingLeft = "15px";
                        newContent.style.paddingRight = "15px";
                        $(newContent).html(data);
                    }
                    $("#h-main-content").append(newContent);

                    // 隐藏子菜单系统，显示具体的内容
                    Hutils.hideWrapper();

                    // 生成标签页
                    {
                        // 清楚所有的tab选中状态
                        $(".active-tab").removeClass("active-tab");

                        // 获取新tab模板内容
                        var optHtml = Hutils.__genTabUI(data_id,name)

                        // 在tab栏目列表中添加新的tab
                        $(".H-tabs-index").append(optHtml);
                    }

                    NProgress.done();
                }
            });
        }else {
            NProgress.done();
        }
    },
    openTab:function(param){

        NProgress.start();

        // 判断子元素会否已经被打开，默认设置为未打开
        var flag = false;

        var __DEFAULT = {
            id:"",
            tile:"",
            type: "GET",
            url: "",
            data: {},
            dataType: "text",
            newIframe: undefined,
        };
        $.extend(true,__DEFAULT,param);

        $.HAjaxRequest({
            url:__DEFAULT.url,
            type:__DEFAULT.type,
            dataType:__DEFAULT.dataType,
            error:function (msg) {
                NProgress.done();
                var msg = "";
                try {
                    msg = JSON.parse(m.responseText);
                    jQuery.Notify({
                        title: "温馨提示：",
                        message: msg.error_msg,
                        type: "danger",
                    });
                    console.log("return message is :",msg);
                    console.log("return code is :",msg.error_code);
                    console.log("return details error info:",msg.error_details);
                    console.log("return version: ",msg.version);
                } catch(e) {
                    console.log(m);
                    console.log(e);
                }
            },
            success:function (d) {
                /*创建tab页**/
                let isExists = Hutils.createTab(__DEFAULT.id,__DEFAULT.title);
                if (isExists) {
                    Hutils.changeTabContent(__DEFAULT.id)
                } else {
                    Hutils.createTabContent(__DEFAULT.id,__DEFAULT.newIframe,d,true);
                }
                NProgress.done();
            }
        });
    },
    getEvent:function(){
        if (window.event) {
            return window.event;
        }
        var func = Hutils.getEvent.caller;
        while (func != null) {
            var arg0 = func.arguments[0];
            if(arg0){
                if((arg0.constructor==Event || arg0.constructor ==MouseEvent
                    || arg0.constructor==KeyboardEvent)
                    ||(typeof(arg0)=="object" && arg0.preventDefault
                    && arg0.stopPropagation)){
                    return arg0;
                }
            }
            func = func.caller;
        }
        return null;
    },
    GetSubSystemMenus:function(resId) {
        $.HAjaxRequest({
            url:"/auth/menu/all/except/button",
            type:"GET",
            data:{resId:resId},
            success:function (data) {
                $("#h-sso-menus-content").initTraditionMenu({
                    data:data,
                });
                $("#sso-menu-side").animate({
                    'left':'0px',
                });
            }
        })
    },
    getCookie:function (name) {
        var arr,reg=new RegExp("(^| )"+name+"=([^;]*)(;|$)");
        if(arr=document.cookie.match(reg))
            return unescape(arr[2]);
        else
            return null;
    },
    go_entry :function (e){
        var id = $(e).attr("data-id");
        var openType = $(e).attr("data-opentype");
        var url = $(e).attr("data-url");
        var serviceCd = $(e).attr("data-serviceCd");

        if (openType == "1") {
            if (serviceCd==""){
                window.open(url);
                return
            }else {
                $.HAjaxRequest({
                    url:"/sso/subsystem/addr",
                    type:"get",
                    data:{
                        scd:serviceCd,
                        addr:url,
                    },
                    dataType:"text",
                    success:function (data) {
                        window.open(data)
                        return
                    }
                })
                return
            }
        } else {
            Hutils.GetSubSystemMenus(id);
        }
    },
    closeTab:function (obj) {
        // 取消后续事件
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            var event = Hutils.getEvent()
            event.stopPropagation()
        }

        let $li = $(obj).closest("li");
        let id = $li.attr("data-id");

        $("#h-sso-window").find("[data-id='"+id+"']").remove();

        if ($li.hasClass("h-wisrc-tab-select")) {
            $li.remove();
            this.findNextShowTab();
        } else {
            $li.remove();
        }
    },
    findNextShowTab:function () {
        let $obj = $(".h-wisrc-tab:last");
        if ($obj.length === 0) {
            this.backHome();
            return;
        }
        $obj.attr("class","h-wisrc-tab h-wisrc-tab-select");
        var id = $obj.attr("data-id");
        this.changeTabContent(id);
    },
    backHome:function () {
        var $tabList = $("#h-wisrc-tablist").closest("div");
        $tabList.css("display","none");
        $("#h-sso-window").css("margin-top","8px");
        $(".h-wisrc-tab").remove();

        var template = $("#h-sso-main-menus").html();
        $("#h-sso-window").html(template);

        $("#wrap").height(document.documentElement.clientHeight - 66);
        Hutils.initMenu(0,-1,"系统服务","管理会计","公共信息");

        var width = $("#sso-menu-side").width();
        $("#sso-menu-side").animate({
            "left":(-1)*width,
            "display":"block",
        });

        $("#sso-main-content").animate({
            "margin-left":"0px",
        });

        $("#bigdata-platform-subsystem").css({
            "width":document.documentElement.clientWidth+32,
        }).show();
    },
    changeTab:function (obj) {
        // 取消后续事件
        if (window.event != undefined){
            window.event.cancelBubble = true;
        } else {
            var event = Hutils.getEvent()
            event.stopPropagation()
        }

        let id = obj.getAttribute("data-id");

        $(".h-wisrc-tab").removeClass("h-wisrc-tab-select").addClass("h-wisrc-tab-not-select");

        $("#sso-main-content").find(".h-wisrc-tab").each(function (index, element) {
            if (element.getAttribute("data-id") == id) {
                element.className = "h-wisrc-tab h-wisrc-tab-select";
                return false
            }
        })

        this.changeTabContent(id);
    },
    isTabExists:function (id) {
        let result = false;
        $("#h-wisrc-tablist").prevAll().each(function (index, element) {
            if ($(element).attr("data-id") == id) {
                result = true;
            }
        })
        return result;
    },
    createTabContent:function (id,iframeFlag,d,openTab) {
        var obj = document.getElementById("h-sso-window");
        obj.style.display = "none";
        let $content = $(".h-wisrc-content");
        $content.removeClass("h-wisrc-content-show").addClass("h-wisrc-content-hide");

        var mc = document.getElementById("sso-main-content");
        if (!openTab) {
            mc.style.marginLeft = "240px";
        }

        if (iframeFlag == "true") {
            var iframe = document.createElement("iframe");
            iframe.setAttribute("data-id",id);
            iframe.width = (document.documentElement.clientWidth) +"px";
            iframe.height = (document.documentElement.clientHeight - 36)+"px";
            iframe.srcdoc = d.replace("window.top.location","//window.top.location");
            iframe.frameBorder = 0;
            $(obj).append(iframe).fadeIn();
        } else {
            var div = document.createElement("div");
            div.setAttribute("data-id",id);
            div.className = "h-wisrc-content h-wisrc-content-show";
            div.innerHTML = d;
            $(obj).append(div).fadeIn();
        }
    },
    changeTabContent:function (id) {
        $(".h-wisrc-content").removeClass("h-wisrc-content-show").addClass("h-wisrc-content-hide");
        $("#h-sso-window").find(".h-wisrc-content")
            .each(function (index, element) {
                if (element.getAttribute("data-id") == id) {
                    element.className = "h-wisrc-content h-wisrc-content-show";
                    return false
                }
        })
    },
    closeAllTab:function (obj) {
        $("#h-wisrc-tab-btn-list").removeClass("in");
        this.backHome();
        //$("#sso-menu-side").animate('left','0px');
    },
    closeOtherTab:function (obj) {
        $("#h-wisrc-tab-btn-list").removeClass("in");
        $(".h-wisrc-tab-not-select").remove();
        $(".h-wisrc-content-hide").remove();
    },
    createTab:function (id,name) {
        var $tabList = $("#h-wisrc-tablist").closest("div");
        $tabList.css("display","block");
        $("#h-sso-window").css("margin-top","26px");

        $(".h-wisrc-tab").removeClass("h-wisrc-tab-select").addClass("h-wisrc-tab-not-select");
        if (this.isTabExists(id)){
            $("#sso-main-content").find(".h-wisrc-tab").each(function (index, element) {
                if (element.getAttribute("data-id") == id) {
                    element.className = "h-wisrc-tab h-wisrc-tab-select";
                    return false
                }
            })
            this.changeTabContent(id);
            return true;
        }
        var li = document.createElement("li");
        li.className = "h-wisrc-tab h-wisrc-tab-select";
        li.setAttribute("data-id",id);
        li.innerHTML = name;
        li.onclick = function () {
            Hutils.changeTab(this);
        };

        /*创建关闭按钮*/
        let span = document.createElement("span");
        span.className = "icon-remove h-wisrc-tab-close";
        span.onclick = function () {
            Hutils.closeTab(this);
        };
        li.appendChild(span);

        $("#h-wisrc-tablist").before(li);
        return false;
    },
    initMenu:function(TypeId,Id,Group1,Group2,Group3){

        var __genUI = function (name) {
            var mdiv = document.createElement("div")
            $(mdiv).addClass("tile-group")
            var mspan = document.createElement("span")
            $(mspan).addClass("tile-group-title").css({
                "font-size":"12px",
                "color":"#fcfcfc",
                "font-weight":"600",
            }).html(name)
            $(mdiv).append(mspan)

            return mdiv
        };

        var __genDiv = function (element) {
            var res_id = element.resId;
            var res_class = element.resClass;
            var res_bg_color =element.resBgColor;
            var res_img = element.resImg;
            var res_name = element.resName;
            var res_url = element.resUrl;
            var open_type = element.resOpenTypeId;
            var newIframe = element.newIFrame;
            var innerFlag = element.innerFlag;
            var serviceCd = element.serviceCd;
            var mdiv = document.createElement("div")
            $(mdiv).attr({
                "data-id":res_id,
                "data-role":"tile",
                "data-url":res_url,
                "data-openType":open_type,
                "data-iframe":newIframe,
                "data-inner":innerFlag,
                "data-serviceCd":serviceCd,
            }).addClass(res_class).addClass("fg-white mfdiv")
                .css("background-color",res_bg_color);

            var cdiv = document.createElement("div")
            $(cdiv).addClass("tile-content iconic")

            var mspan = document.createElement("span")
            $(mspan).addClass("icon")

            var mimg = document.createElement("img")
            mimg.className = "tile-image"
            $(mimg).attr("src",res_img)

            var ccdiv = document.createElement("div");
            $(ccdiv).addClass("tile-label").html(res_name);

            $(mspan).append(mimg)
            $(cdiv).append(mspan)
            $(mdiv).append(cdiv)
            $(mdiv).append(ccdiv)
            return mdiv
        };

        $.HAjaxRequest({
            url:"/auth/menu/index",
            data:{
                type_id:TypeId,
                res_id:Id
            },
            success: function(data){

                var cdiv1 = document.createElement("div");
                $(cdiv1).addClass("tile-container");

                var cdiv2 = document.createElement("div");
                $(cdiv2).addClass("tile-container");

                var cdiv3 = document.createElement("div");
                $(cdiv3).addClass("tile-container");

                var divlist = new Array();

                divlist.push(cdiv1);
                divlist.push(cdiv2);
                divlist.push(cdiv3);

                $(data).each(function(index,element){
                    var gid = parseInt(element.group_id)-1;
                    var mdiv = divlist[gid];
                    $(mdiv).append(__genDiv(element));
                });

                if ($(cdiv1).html() != "") {
                    var mdiv1 = __genUI(Group1)
                    $(mdiv1).append(cdiv1)
                    $("#h-system-service").html(mdiv1)
                }else{
                    $("#h-system-service").remove()
                }

                if ($(cdiv2).html() !=""){
                    var mdiv2 = __genUI(Group2)
                    $(mdiv2).append(cdiv2)
                    $("#h-mas-service").html(mdiv2)
                }else{
                    $("#h-mas-service").remove()
                }

                if ($(cdiv3).html() !=""){
                    var mdiv3 = __genUI(Group3)
                    $(mdiv3).append(cdiv3);
                    $("#h-other-service").html(mdiv3)
                }else{
                    $("#h-other-service").remove();
                }


                $(".mfdiv").click(function(){
                    Hutils.go_entry(this)
                })


                $(function() {
                    //取消水平滑动的插件
                    //$.StartScreen();
                    var tiles = $(".tile, .tile-small, .tile-sqaure, .tile-wide, .tile-large, .tile-big, .tile-super");
                    $.each(tiles, function() {
                        var tile = $(this);
                        setTimeout(function() {
                            tile.css({
                                opacity: 1,
                                "-webkit-transform": "scale(1)",
                                "transform": "scale(1)",
                                "-webkit-transition": ".3s",
                                "transition": ".3s"
                            });
                        }, Math.floor(Math.random() * 500));
                    });
                    $(".tile-group").animate({
                        left: 0
                    });
                });
            },
        });
    },
};

// 树形插件
(function($){
    $.fn.initTraditionMenu = function(param){

        // 保留节点索引
        var $this = this;

        /*
         * 插件默认参数列表。
         * */
        var __DEFAULT = {
            data: "",
            fontSize:"14px",
            showLiHeight:"36px",
            showIconWidth:"36px",
            showFontSize:"14px",
            iconColor:"#030202",
            showLevel:1,
        };
        var __autoAttr = false;

        $.extend(true,__DEFAULT,param);

        var getEvent = function(){

            if(window.event)    {
                return window.event;
            }
            var func = getEvent.caller;

            while( func != null ){
                var arg0 = func.arguments[0];
                if(arg0){
                    if((arg0.constructor==Event || arg0.constructor ==MouseEvent
                        || arg0.constructor==KeyboardEvent)
                        ||(typeof(arg0)=="object" && arg0.preventDefault
                        && arg0.stopPropagation)){
                        return arg0;
                    }
                }
                func = func.caller;
            }
            return null;
        };

        // 1.get top node, and sort array
        function sortTree(a){

            // load result sorted
            var list = [];

            // get select's options
            // append it to new select which simulate by ul li
            if (Object.prototype.toString.call(a) == '[object Array]'){

            } else {
                return [];
            }

            //set max dept val
            var MAXDEPT = 8;

            var INDEX = 1;

            function getRoots(arr){
                var Roots = new Array();
                for(var i = 0; i < arr.length;i++){
                    var rootFlag = true
                    for ( var j = 0; j < arr.length;j++){
                        if (arr[i].Res_up_id == arr[j].Res_id){
                            rootFlag = false
                            break
                        }
                    }
                    if (rootFlag == true){
                        Roots.push(arr[i])
                    }
                }
                var len = Roots.length;
                var b = 0;
                for (var a = 0; a < len; a++){
                    for (b = a + 1; b < len; b++){
                        if (Roots[a].Res_id > Roots[b].Res_id){
                            var tmp = Roots[b];
                            Roots[b] = Roots[a];
                            Roots[a] = tmp;
                        }
                    }
                }
                return Roots;
            }

            function traversed(node,arr){
                if (++INDEX > MAXDEPT){
                    console.log("递归超过8层,为保护计算机,退出递归");
                    return
                }
                for (var i = 0; i < arr.length; i++){
                    if (node == arr[i].Res_up_id){
                        arr[i].dept = INDEX
                        list.push(arr[i])
                        traversed(arr[i].Res_id,arr)
                    }
                }
                INDEX--;
            }

            function listElem(roots,arr){
                for (var i = 0; i < roots.length; i++){
                    roots[i].dept = INDEX
                    list.push(roots[i])
                    traversed(roots[i].Res_id,arr)
                }
            }

            listElem(getRoots(a),a)
            return list
        }
        // 2. set data-*
        // 3. genUI
        function genTreeUI(a){
            var ul = document.createElement("ul");
            ul.style.width = "100%";

            for(var i = 0; i < a.length; i++) {

                var li = document.createElement("li");
                li.setAttribute("data-openType",a[i].Res_open_type);
                li.setAttribute("data-iframe",a[i].New_iframe);
                li.setAttribute("data-url",a[i].Res_url);
                li.setAttribute("data-id",a[i].Res_id);
                li.setAttribute("data-dept",a[i].dept);
                li.style.margin = "0px";
                li.style.textAlign = "left";
                li.style.fontWeight = "500";
                li.style.paddingLeft= "3px";

                li.style.fontSize = __DEFAULT.showFontSize;
                li.style.cursor = "pointer";
                li.style.position = "relative";

                var span = document.createElement("span");
                span.className = "HTreeLi";
                span.innerHTML = a[i].Res_name;

                if (a[i].Res_attr == "1") {
                    // 叶子
                    li.className = "HMenuLiLeaf mdl-js-ripple-effect mdl-js-button mdl-button--raised menu-leaf";
                    li.style.height = __DEFAULT.showLiHeight;
                    li.style.lineHeight = __DEFAULT.showLiHeight;
                    li.style.backgroundColor = "rgb(0, 153, 204)";

                    var img = document.createElement("img");
                    img.style.marginLeft = "12px";
                    img.src = a[i].Res_img;
                    li.appendChild(img);
                    // if  ( parseInt(a[i].dept) > __DEFAULT.showLevel) {
                    //     li.style.display = "none";
                    // }

                    span.style.height = __DEFAULT.showLiHeight;
                    span.style.lineHeight = __DEFAULT.showLiHeight;
                    span.style.marginLeft = "3px";
                    span.style.fontSize = "12px";
                    li.appendChild(span);
                } else {
                    // 结点
                    li.className = "HTreeshowOrHideIconHzw mdl-js-ripple-effect mdl-js-button mdl-button--raised menu-node";
                    // if (i != 0) {
                    li.style.borderTop = "#cacaca solid 1px";
                    // li.style.borderBottom = "#6E6E6E solid 1px";
                    // }
                    li.style.height = "48px";
                    li.style.lineHeight = "48px";
                    span.style.height = "48px";
                    span.style.lineHeight = "48px";
                    span.style.marginLeft = "12px";
                    span.style.fontWeight = "600";

                    var hzwy = document.createElement("hzwy")
                    hzwy.style.marginRight = "12px";
                    hzwy.style.height = "48px";
                    hzwy.style.lineHeight = "48px";
                    hzwy.style.color = "#555555";
                    hzwy.className = "icon-double-angle-down pull-right";
                    li.appendChild(span);
                    li.appendChild(hzwy);

                    // if (parseInt(a[i].dept) != 1){
                    //     li.style.display = "none";
                    // }
                }
                componentHandler.upgradeElement(li);
                ul.appendChild(li);
            }
            return ul;
        }

        // 绑定伸缩按钮
        function showOrHide(e){
            var dept = $(e).attr("data-dept");
            var nextObj = $(e).next();
            var nextDept = $(nextObj).attr("data-dept");
            var nextDisplay = $(nextObj).css("display");

            if (nextDisplay == "none" && parseInt(nextDept)>parseInt(dept)) {
                $(e).find("hzwy").removeClass("icon-double-angle-down").addClass("icon-double-angle-up")
                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)+1==parseInt($(element).attr("data-dept"))){
                        // 显示
                        if ($(element).find("hzwy").hasClass("icon-double-angle-up")) {
                            $(element).find("hzwy").addClass("icon-double-angle-down").removeClass("icon-double-angle-up")
                        }
                        $(element).fadeIn(400);
                    }else if (parseInt(dept)+1 < parseInt($(element).attr("data-dept"))){
                        // 隐藏
                        if ($(element).find("hzwy").hasClass("icon-double-angle-up")) {
                            $(element).find("hzwy").addClass("icon-double-angle-down").removeClass("icon-double-angle-up")
                        }
                        $(element).fadeOut(200);
                    } else {
                        return false
                    }
                })
            } else if (nextDisplay == "none" && parseInt(nextDept)<=parseInt(dept)){
                return
            } else if (nextDisplay != "none" && parseInt(nextDept)>parseInt(dept)){

                $(e).find("hzwy").removeClass("icon-double-angle-up").addClass("icon-double-angle-down")

                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)<parseInt($(element).attr("data-dept"))){
                        if ($(element).find("hzwy").hasClass("icon-double-angle-up")) {
                            $(element).find("hzwy").addClass("icon-double-angle-up").removeClass("icon-double-angle-down");
                        }
                        $(element).fadeOut(200);
                    }else if (parseInt(dept)>=parseInt($(element).attr("data-dept"))){
                        return false
                    }
                })
            } else {
                if ($(e).find("hzwy").hasClass("icon-double-angle-up")) {
                    $(e).find("hzwy").removeClass("icon-double-angle-up").addClass("icon-double-angle-down");
                } else if ($(e).find("hzwy").hasClass("icon-double-angle-down")) {
                    $(e).find("hzwy").removeClass("icon-double-angle-down").addClass("icon-double-angle-up");
                }
                return
            }
        }

        var li = sortTree(__DEFAULT.data);
        var opt = genTreeUI(li);

        $this.html(opt);

        $this.find(".HMenuLiLeaf").on("click",function () {
            var url = $(this).attr("data-url");
            if (url.length == 0 || url == undefined){
                $.Notify({
                    message:"请求的路由地址为空，请联系管理员",
                    type:"warning"
                });
                return
            }

            var openType = $(this).attr("data-openType");

            if (openType == "1") {
                window.open(url)
                return
            }

            var menuName = $(this).find("span:eq(0)").html();
            var dataId = $(this).attr("data-id");

            var iframeFlag = $(this).attr("data-iframe");

            $.HAjaxRequest({
                url:url,
                type:"GET",
                dataType:"text",
                success:function (d) {
                    /*创建tab页**/
                    let isExists = Hutils.createTab(dataId,menuName);
                    if (isExists) {
                        Hutils.changeTabContent(dataId)
                    } else {
                        Hutils.createTabContent(dataId,iframeFlag,d);
                    }
                }
            })
        })

        /*
         * 给伸缩按钮绑定单击事件
         * */
        $this.find(".HTreeshowOrHideIconHzw").on("click",function () {
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent();
                event.stopPropagation();
            }
            showOrHide(this);
        });
    };

    $.fn.Htree = function(param){
        // 1. 获取top节点
        // 2. 获取id，text，parentId，将其他属性设置成data-属性
        // 3. 生成tree。
        // 4. 绑定单击按钮
        // 5. 伸缩按钮图标
        // function list:
        // 6. 删除节点
        // 7. 新增节点
        // 8. 更新节点
        // attr 为0 表示叶子,为1 表示节点

        // 保留节点索引
        var $this = this;

        /*
         * 插件默认参数列表。
         * */
        var __DEFAULT = {
            data: "",
            fontSize:"13px",
            showLiHeight:"23px",
            showFontSize:"14px",
            iconColor:"#030202",
            showLevel:3,

            onChange:function (obj) {
                console.log("没有注册点击函数")
            },
        };
        var __autoAttr = false;

        $.extend(true,__DEFAULT,param);

        if (__DEFAULT.data.length > 0 && __DEFAULT.data[0].attr == undefined) {
            __autoAttr = true;
        }

        var getEvent = function(){

            if(window.event)    {
                return window.event;
            }
            var func = getEvent.caller;

            while( func != null ){
                var arg0 = func.arguments[0];
                if(arg0){
                    if((arg0.constructor==Event || arg0.constructor ==MouseEvent
                        || arg0.constructor==KeyboardEvent)
                        ||(typeof(arg0)=="object" && arg0.preventDefault
                        && arg0.stopPropagation)){
                        return arg0;
                    }
                }
                func = func.caller;
            }
            return null;
        };

        // 1.get top node, and sort array
        function sortTree(a){

            // load result sorted
            var list = [];

            // get select's options
            // append it to new select which simulate by ul li
            if (Object.prototype.toString.call(a) == '[object Array]'){

            } else {
                return [];
            }

            //set max dept val
            var MAXDEPT = 8;

            var INDEX = 1;

            function getRoots(arr){
                var Roots = [];
                for(var i = 0; i < arr.length;i++){
                    var rootFlag = true
                    for ( var j = 0; j < arr.length;j++){
                        if (arr[i].parentId == arr[j].id){
                            rootFlag = false
                            break
                        }
                    }
                    if (rootFlag == true){
                        Roots.push(arr[i])
                    }
                }
                return Roots
            }

            function traversed(node,arr){
                if (++INDEX > MAXDEPT){
                    console.log("递归超过8层,为保护计算机,退出递归");
                    return
                }
                for (var i = 0; i < arr.length; i++){
                    if (node == arr[i].parentId){
                        arr[i].dept = INDEX
                        list.push(arr[i])
                        traversed(arr[i].id,arr)
                    }
                }
                INDEX--;
            }

            function listElem(roots,arr){
                for (var i = 0; i < roots.length; i++){
                    roots[i].dept = INDEX
                    list.push(roots[i])
                    traversed(roots[i].id,arr)
                }
            }

            listElem(getRoots(a),a)

            return list
        }
        // 2. set data-*
        // 3. genUI
        function genTreeUI(a){
            var opt = "<ul class='col-sm-12 col-md-12 col-lg-12'>"
            for(var i = 0; i < a.length; i++){
                var pd = parseInt(a[i].dept)*20 - 10
                if (isNaN(pd)){
                    pd = 10
                }

                if (a[i].attr == "0") {
                    if  ( parseInt(a[i].dept) <= __DEFAULT.showLevel) {
                        // 叶子信息
                        opt += '<li data-id="'+a[i].id+'" data-dept="'+a[i].dept+'" style="margin:0px; text-align: left;font-weight:500;padding-left:'+pd+'px; height:'+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; font-size: '+__DEFAULT.showFontSize+'; cursor: pointer;position: relative;">' +
                            '<hzw style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; width: 20px;cursor: pointer ;display: inline-block">' +
                            '<i class="icon-file-alt" style="color: green;"></i>' +
                            '</hzw>' +
                            '<span class="HTreeLi" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; position: absolute;">'+a[i].text+'</span></li>'

                    } else {
                        // 叶子信息
                        opt += '<li data-id="'+a[i].id+'" data-dept="'+a[i].dept+'" style="margin:0px; text-align: left;font-weight:500;padding-left:'+pd+'px; height:'+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; font-size: '+__DEFAULT.showFontSize+'; cursor: pointer;position: relative; display: none">' +
                            '<hzw style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; width: 20px;cursor: pointer ;display: inline-block">' +
                            '<i class="icon-file-alt" style="color: green;"></i>' +
                            '</hzw>' +
                            '<span class="HTreeLi" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; position: absolute;">'+a[i].text+'</span></li>'

                    }

                } else {
                    if (parseInt(a[i].dept) < __DEFAULT.showLevel){
                        // 节点信息
                        opt += '<li data-id="'+a[i].id+'" data-dept="'+a[i].dept+'" style="margin:0px; text-align: left;font-weight:500;padding-left:'+pd+'px; height:'+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; font-size: '+__DEFAULT.showFontSize+'; cursor: pointer;position: relative;">' +
                            '<hzw class="HTreeshowOrHideIconHzw" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; width: 20px;cursor: cell ;display: inline-block">' +
                            '<i style="color: #ccb008;" class="icon-folder-open"> </i>' +
                            '</hzw>' +
                            '<span class="HTreeLi" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; position: absolute;">'+a[i].text+'</span></li>'
                    } else  if (parseInt(a[i].dept) == __DEFAULT.showLevel) {
                        // 节点信息
                        opt += '<li data-id="'+a[i].id+'" data-dept="'+a[i].dept+'" style="margin:0px; text-align: left;font-weight:500;padding-left:'+pd+'px; height:'+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; font-size: '+__DEFAULT.showFontSize+'; cursor: pointer;position: relative;">' +
                            '<hzw class="HTreeshowOrHideIconHzw" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; width: 20px;cursor: cell ;display: inline-block">' +
                            '<i style="color: #ccb008;" class="icon-folder-close"> </i>' +
                            '</hzw>' +
                            '<span class="HTreeLi" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; position: absolute;">'+a[i].text+'</span></li>'
                    } else {
                        // 节点信息
                        opt += '<li data-id="'+a[i].id+'" data-dept="'+a[i].dept+'" style="margin:0px; text-align: left;font-weight:500;padding-left:'+pd+'px; height:'+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; font-size: '+__DEFAULT.showFontSize+'; cursor: pointer;position: relative;display: none;">' +
                            '<hzw class="HTreeshowOrHideIconHzw" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; width: 20px;cursor: cell ;display: inline-block">' +
                            '<i style="color: #ccb008;" class="icon-folder-open"> </i>' +
                            '</hzw>' +
                            '<span class="HTreeLi" style="height: '+__DEFAULT.showLiHeight+'; line-height: '+__DEFAULT.showLiHeight+'; position: absolute;">'+a[i].text+'</span></li>'
                    }

                }
            }
            opt +='</ul>'
            return opt;
        }

        // 绑定伸缩按钮
        function showOrHide(e){
            $.notifyClose()
            var dept = $(e).attr("data-dept")
            var nextObj = $(e).next()
            var nextDept = $(nextObj).attr("data-dept")
            var nextDisplay = $(nextObj).css("display")

            if (nextDisplay == "none" && parseInt(nextDept)>parseInt(dept)){

                $(e).find("i").removeClass("icon-folder-close").addClass("icon-folder-open")

                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)+1==parseInt($(element).attr("data-dept"))){
                        // 显示
                        if ($(element).find("i").hasClass("icon-folder-open")) {
                            $(element).find("i").addClass("icon-folder-close").removeClass("icon-folder-open")
                        }
                        $(element).fadeIn(400);
                    }else if (parseInt(dept)+1 < parseInt($(element).attr("data-dept"))){
                        // 隐藏
                        if ($(element).find("i").hasClass("icon-folder-open")) {
                            $(element).find("i").addClass("icon-folder-close").removeClass("icon-folder-open")
                        }
                        $(element).fadeOut(200);
                    } else {
                        return false
                    }
                })
            }else if (nextDisplay == "none" && parseInt(nextDept)<=parseInt(dept)){
                return
            }else if (nextDisplay != "none" && parseInt(nextDept)>parseInt(dept)){

                $(e).find("i").removeClass("icon-folder-open").addClass("icon-folder-close")

                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)<parseInt($(element).attr("data-dept"))){
                        if ($(element).find("i").hasClass("icon-folder-open")) {
                            $(element).find("i").addClass("icon-folder-open").removeClass("icon-folder-close")
                        }
                        $(element).fadeOut(200);
                    }else if (parseInt(dept)>=parseInt($(element).attr("data-dept"))){
                        return false
                    }
                })
            } else {
                $.Notify({
                    title:"温馨提示:",
                    message:"这个节点下边没有叶子信息",
                    type:"info",
                });

                if ($(e).find("i").hasClass("icon-folder-open")) {
                    $(e).find("i").removeClass("icon-folder-open").addClass("icon-folder-close")
                } else if ($(e).find("i").hasClass("icon-folder-close")) {
                    $(e).find("i").removeClass("icon-folder-close").addClass("icon-folder-open")
                }
                return
            }
        }

        var li = sortTree(__DEFAULT.data)
        var opt = genTreeUI(li)

        $this.html(opt)

        /*
         * 如果这个节点没有下层信息，则将这个层级的伸缩按钮去掉。
         * */
        if (__autoAttr){
            $this.find("ul li").each(function(index,element){
                var curDept = parseInt($(element).attr("data-dept"));
                var nextDept = parseInt($(element).next().attr("data-dept"));
                if (curDept>=nextDept || isNaN(nextDept)){
                    $(element).find("hzw").html("<i class='icon-file-alt' style='color: green;'></i>").removeClass("HTreeshowOrHideIconHzw").css("cursor","pointer");
                }
            });
        }

        /*
         * 给ul中每一行li绑定点击事件
         * */
        $this.find("ul li").on("click",function(){
            $.notifyClose()
            $this.find(".HTreeLi").css("color","")
            $(this).find("span").css("color","red")
            $this.attr("data-selected",$(this).attr("data-id"))
            __DEFAULT.onChange(this)
        });

        $this.find("ul li").on("mouseover",function () {
            $(this).css({
                "background-color":"#cccccc",
            })
        });

        $this.find("ul li").on("mouseout",function () {
            $(this).css({
                "background-color":"",
            })
        });

        /*
         * 给伸缩按钮绑定单击事件
         * */
        $this.find(".HTreeshowOrHideIconHzw").on("click",function () {
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
            showOrHide($(this).parent())
        });

    };

    $.fn.HtreeWithLine = function(param){

        var sel = this;
        var obj = this;
        var __DEFAULT = {
            data: "",
            height:"23px",
            width:"100%",
            border:"#ccc solid 1px",
            fontSize:"13px",
            borderRadius:"5px",
            bgColor:"white",
            placeholder:"--请选择--",

            showLiHeight:"23px",
            showBorder:"",
            showFontSize:"14px",
            iconColor:"#ff5763",

            // 值改变触发事件
            onclick:"",

            onChange:"",

            // select中默认值
            value:"hselectdefault",

            // 是否禁止选择
            disabled:false,

            // checkbox选择框,
            // 默认禁用选择框,如果设置成true,则显示考勤选怎狂
            checkbox:false,

            // 是否启动自动化节点/叶子处理
            // 如果开启,则将会把末级节点全部处理成叶子
            autoAttr: true,

            // 默认开启节点可以选中
            // 如果设置成false, 则不允许选择节点,在单击节点时,将会显示或隐藏子节点
            nodeSelect: true,

            dashed:true,

        };

        // 记录是否为层级结构
        // true表示是层级结构
        // false表示非层级结构
        var level_flag = false;

        $.extend(true,__DEFAULT,param);

        if (__DEFAULT.data.length > 0 && __DEFAULT.data[0].attr != undefined) {
            __DEFAULT.autoAttr = false;
        }

        // set showBorder to border style
        if (__DEFAULT.showBorder==""){
            __DEFAULT.showBorder = __DEFAULT.border
        };

        var getEvent = function(){

            if(window.event)    {
                return window.event;
            }
            var func = getEvent.caller;

            while( func != null ){
                var arg0 = func.arguments[0];
                if(arg0){
                    if((arg0.constructor==Event || arg0.constructor ==MouseEvent
                        || arg0.constructor==KeyboardEvent)
                        ||(typeof(arg0)=="object" && arg0.preventDefault
                        && arg0.stopPropagation)){
                        return arg0;
                    }
                }
                func = func.caller;
            }
            return null;
        };
        /*
         * This function sort array.
         * Accept One Array Variable.
         * */
        function sortTree(a){

            // load result sorted
            var list = [];

            // get select's options
            // append it to new select which simulate by ul li
            if (Object.prototype.toString.call(a) == '[object Array]'){
                $(sel).find("option").each(function(index,element){
                    var ijs = {}
                    ijs.id = $(element).val();
                    ijs.text = $(element).text()
                    a.push(ijs)
                })
            } else {
                $(sel).find("option").each(function(index,element){
                    var ijs = {}
                    ijs.id = $(element).val();
                    ijs.text = $(element).text()
                    list.push(ijs)
                })
                return list
            }

            //set max dept val
            var MAXDEPT = 8;

            var INDEX = 1;

            function getRoots(arr){
                var Roots = [];
                for(var i = 0; i < arr.length;i++){
                    var rootFlag = true
                    for ( var j = 0; j < arr.length;j++){
                        if (arr[i].parentId == arr[j].id){
                            rootFlag = false
                            break
                        }
                    }
                    if (rootFlag == true){
                        Roots.push(arr[i])
                    }
                }

                var len = Roots.length;
                var b = 0;
                for (var a = 0; a < len; a++){
                    for (b = a + 1; b < len; b++){
                        if (Roots[a].id > Roots[b].parentId){
                            var tmp = Roots[b];
                            Roots[b] = Roots[a];
                            Roots[a] = tmp;
                        }
                    }
                }

                return Roots
            }

            function traversed(node,arr){
                if (++INDEX > MAXDEPT){
                    console.log("递归超过8层,为保护计算机,退出递归");
                    return
                }
                for (var i = 0; i < arr.length; i++){

                    if (node == arr[i].parentId){
                        arr[i].dept = INDEX
                        list.push(arr[i])
                        traversed(arr[i].id,arr)
                    }
                }
                INDEX--;
            }

            function listElem(roots,arr){
                for (var i = 0; i < roots.length; i++){
                    roots[i].dept = INDEX
                    list.push(roots[i])
                    traversed(roots[i].id,arr)
                }
            }

            listElem(getRoots(a),a)

            return list
        };

        // 生成树形线
        // 辅助查看
        function genImgLine(dept,attr) {
            var i = 0;
            var img_src = document.createElement("yph")

            if (dept == 0 || dept == undefined){
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "18px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/line.gif");
                    img_src.appendChild(img);
                } else {
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img.style.width = "8px";
                    img_src.appendChild(img);
                }
                return img
            }

            for (;i<dept-1;i++) {
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "18px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/line.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            }

            if (attr == "1") {
                // 节点
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "18px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/minus.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            } else if (attr == "0") {
                // 叶子
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "18px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/join.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            } else {
                // 没有指定叶子,节点标识
                // 节点
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "18px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/minus.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            }
            return img_src
        }

        // 产生一行li
        function genULli(attr,id,dept,text) {
            var li = document.createElement("li")
            li.setAttribute("data-attr",attr);
            li.setAttribute("data-id",id);
            li.setAttribute("data-dept",dept);
            li.style.margin = "0px";
            li.style.textAlign = "left";
            li.style.fontSize = "500";
            li.style.height = __DEFAULT.showLiHeight;
            li.style.lineHeight = __DEFAULT.showLiHeight;
            li.style.fontSize = __DEFAULT.showFontSize;
            li.style.cursor = "pointer";
            li.style.position = "relative";

            var hzw = document.createElement("hzw")
            hzw.setAttribute("class","HshowOrHideIconHzw");
            hzw.style.height = __DEFAULT.showLiHeight;
            hzw.style.lineHeight = __DEFAULT.showLiHeight;
            hzw.style.width = "20px";
            hzw.style.display = "inline-block";
            hzw.style.marginLeft = "4px";
            var i = document.createElement("i")
            if (attr == "0") {
                i.setAttribute("class","icon-file-alt")
                i.style.color = "#2E8B57";
            } else {
                i.setAttribute("class","icon-folder-open");
                i.style.color = "#FFCC33";
            }
            hzw.appendChild(i)

            var span = document.createElement("span");
            span.style.height = __DEFAULT.showLiHeight;
            span.style.lineHeight = __DEFAULT.showLiHeight;
            span.style.position = "absolute";
            span.innerHTML = text;
            span.className = "HTreeLi"

            var img_src = genImgLine(dept,attr)
            li.appendChild(img_src)

            if (__DEFAULT.checkbox) {
                var checkBoxInput = document.createElement("input");
                checkBoxInput.setAttribute("type","checkbox");
                checkBoxInput.style.marginTop = "0px";
                checkBoxInput.style.height = "14px";
                checkBoxInput.style.width = "14px";
                checkBoxInput.value = id;
                li.appendChild(checkBoxInput);
            }

            li.appendChild(hzw);
            li.appendChild(span)
            return li
        }

        // 根据数据,
        // 生成需要展示的数据
        function genTreeUI(a){
            var opt = document.createElement("ul")
            opt.style.zIndex = 9999;
            opt.style.padding = "0px";
            opt.style.listStyle = "none";
            opt.style.margin = "0px";
            opt.style.paddingLeft = "15px";

            for(var i = 0; i < a.length; i++){
                var pd = parseInt(a[i].dept)
                if (pd > 1) {
                    level_flag = true;
                }
                if (isNaN(pd)){
                    pd = 1
                }
                opt.appendChild(genULli(a[i].attr,a[i].id,a[i].dept,a[i].text));
            }
            return opt;
        };

        function adjustImg(ul) {
            if (__DEFAULT.dashed && level_flag) {

                if (ul != undefined) {
                    var yph = ul.firstElementChild.getElementsByTagName("yph");
                    if (yph.length > 0) {
                        if (yph[0].firstElementChild.getAttribute("src") == "/static/images/icon_select/minus.gif"){
                            yph[0].firstElementChild.setAttribute("src","/static/images/icon_select/minusbottom.gif")
                        }
                        if (yph[0].firstElementChild.getAttribute("src") == "/static/images/icon_select/join.gif"){
                            yph[0].firstElementChild.setAttribute("src","/static/images/icon_select/upjoinbutton.gif")
                        }
                    }
                }
                var children = ul.childNodes;
                var length = children.length;
                var img_index = children[length-1].getAttribute("data-dept");
                for (var i = 1; i < length; i++){
                    var curli = children[i]
                    var nextli = children[i+1]
                    if (nextli == undefined) {
                        var curdept = curli.getAttribute("data-dept")
                        var curNode = curli.getAttribute("data-attr")
                        if (curNode == "0") {
                            var yph = curli.getElementsByTagName("yph")
                            if (yph.length >= 0 && !isNaN(curdept)){
                                yph[0].childNodes[parseInt(curdept)-1].setAttribute("src","/static/images/icon_select/joinbottom.gif");
                            }
                        }
                    } else {
                        var curdept = curli.getAttribute("data-dept")
                        var nextdept = nextli.getAttribute("data-dept")

                        var curNode = curli.getAttribute("data-attr")
                        var nextNode = nextli.getAttribute("data-attr")
                        if (parseInt(curdept) > parseInt(nextdept)){
                            // 下级节点是节点，当前选中想层级大于下级接节点
                            if (curNode == "0") {
                                var yph = curli.getElementsByTagName("yph")
                                if (yph.length >= 0 && !isNaN(curdept)){
                                    yph[0].childNodes[parseInt(curdept)-1].setAttribute("src","/static/images/icon_select/joinbottom.gif");
                                }
                            }
                        }
                    }

                    var yph = children[length-i].getElementsByTagName("yph")
                    if (img_index > 0) {
                        if (children[length-i].getAttribute("data-attr") == "1") {
                            var dept = children[length-i].getAttribute("data-dept");
                            if (parseInt(dept) < img_index) {
                                img_index = parseInt(dept);
                                yph[0].lastElementChild.src = "/static/images/icon_select/minustop.gif";
                            }
                        }

                        for (var j = 0; j < img_index - 1; j++){
                            var img = yph[0].childNodes[j];
                            if (img != undefined){
                                img.src = "/static/images/icon_select/empty.gif";
                            }
                        }
                    }

                    if (children[length-i].getAttribute("data-attr") == "1") {
                        var imgs = children[length-i].getElementsByTagName("img")
                        if (imgs.length > 0) {
                            imgs[imgs.length-1].setAttribute("class","mf-images-click")
                        }
                    }
                }


                // 处理第一个
                var yph = children[0].getElementsByTagName("yph")
                if (img_index > 0) {
                    if (children[0].getAttribute("data-attr") == "1") {
                        var dept = children[0].getAttribute("data-dept");
                        if (parseInt(dept) < img_index) {
                            img_index = parseInt(dept);
                            yph[0].lastElementChild.setAttribute("src","/static/images/icon_select/minusright.gif")
                        }
                    }
                    for (var j = 0; j < img_index - 1; j++){
                        var img = yph[0].childNodes[j];
                        if (img != undefined) {
                            img.setAttribute("src","/static/images/icon_select/empty.gif")
                        }
                    }
                }

                if (children[0].getAttribute("data-attr") == "1") {
                    var imgs = children[0].getElementsByTagName("img")
                    if (imgs.length > 0) {
                        imgs[imgs.length-1].setAttribute("class","mf-images-click")
                    }
                }
            }
        }

        function showUp(e){
            var dept = $(e).attr("data-dept")
            $(e).prevAll().each(function(index,element){
                if (parseInt(dept)>parseInt($(element).attr("data-dept"))){
                    $(element).show();
                    dept = $(element).attr("data-dept")
                }
            })
        };

        function modifyIcon(e,showOrHide) {
            if (showOrHide) {
                // 显示
                if ($(e).find("i").hasClass("icon-folder-close")) {
                    $(e).find("i").addClass("icon-folder-open").css({"color":"#FFCC33"}).removeClass("icon-folder-close");
                }
            } else {
                // 隐藏
                if ($(e).find("i").hasClass("icon-folder-open")) {
                    $(e).find("i").addClass("icon-folder-close").removeClass("icon-folder-open");
                }
            }
        }

        function modifyImgLine(e,showOrHide) {
            if (showOrHide && __DEFAULT.dashed && $(e).find("img").last() != undefined) {
                // 显示
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plus.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minus.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plusbottom.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minusbottom.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plustop.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minustop.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plusright.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minusright.gif")
                    return
                }
            } else if ( __DEFAULT.dashed && $(e).find("img").last() != undefined) {
                // 隐藏
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minus.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plus.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minusbottom.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plusbottom.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minustop.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plustop.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minusright.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plusright.gif")
                    return
                }
            }
        }

        // 隐藏过现实下级信息
        function showOrHide(e){
            // 参数是被点击的哪一行

            // 获取当前被点击的哪一行的层级
            var dept = $(e).attr("data-dept")

            // 获取下一行对象
            var nextObj = $(e).next()

            // 获取下一行层级
            var nextDept = $(nextObj).attr("data-dept")

            // 获取下一行状态
            var nextDisplay = $(nextObj).css("display")

            // 如果下一行是隐藏状态, 则修改成现实
            // 如果下一行是显示状态,则修改为隐藏
            if (nextDisplay == "none" && parseInt(nextDept) > parseInt(dept)){

                // 如果检查到图标是关闭状态状态
                // 则修改为打开状态
                modifyIcon(e,true)

                //修改线条
                //如果展开,则替换成 减号
                //如果隐藏,则替换成 加号
                modifyImgLine(e,true)

                $(e).nextAll().each(function(index,element) {
                    if (parseInt(dept)+1==parseInt($(element).attr("data-dept"))){

                        $(element).show();
                        modifyIcon(element,false)
                        modifyImgLine(element,false)

                    } else if (parseInt(dept)+1 < parseInt($(element).attr("data-dept"))) {
                        // 切换成关闭状态
                        modifyIcon(element,false)

                        $(element).hide();

                        modifyImgLine(element,false)
                    } else {
                        // 如果遇到下一层级的高度小于被选中的层级高度
                        // 则退出执行过程
                        return false
                    }
                })
            }else if (nextDisplay == "none" && parseInt(nextDept)<=parseInt(dept)){
                // 如果下一行被隐藏
                // 且下一行的层级下雨当前层级
                // 则表示没有下一层极,直接退出
                return
            }else if (nextDisplay != "none" && parseInt(nextDept)>parseInt(dept)){
                modifyImgLine(e,false);
                modifyIcon(e,false);

                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)<parseInt($(element).attr("data-dept"))){
                        modifyImgLine(e,false)
                        modifyIcon(e,false)
                        $(element).hide();
                    }else if (parseInt(dept)>=parseInt($(element).attr("data-dept"))){
                        return false
                    }
                })
            }else {
                return
            }
        };

        // 如果非层级结构
        // 则删除虚线和图标
        function adjustnormaltree() {
            if (!level_flag) {
                $(ui).find("li").each(function (index, element) {
                    $(element).find("hzw").remove();
                    $(element).find("img").remove();
                    $(element).css("padding-left","8px");
                })
            }
        };

        function adjustAttr(ui) {
            // 修正叶子节点
            // 如果设置了成员属性 attr == false, 则执行这个操作
            if (__DEFAULT.autoAttr) {
                $(ui).find("li").each(function(index,element){
                    var curDept = parseInt($(element).attr("data-dept"))
                    var nextDept = parseInt($(element).next().attr("data-dept"))
                    if (curDept>=nextDept || isNaN(nextDept)){
                        $(element).attr("data-attr","0");
                        $(element).find("hzw i").removeClass("icon-folder-open icon-folder-close").addClass("icon-file-alt");
                        if (__DEFAULT.dashed && level_flag) {
                            $(element).find("img").last().attr("src","/static/images/icon_select/join.gif");
                        }
                    } else {
                        $(element).attr("data-attr","1")
                    }
                });
            }
        }


        var ui = genTreeUI(sortTree(__DEFAULT.data));
        // 如果没有层级,则清除第一层级的叶子
        adjustnormaltree();
        // 调整li属性,
        // 如果没有设置attr这个字段,则自动匹配
        adjustAttr(ui);

        // 设置虚线
        adjustImg(ui);
        $(obj).html(ui);

        if (__DEFAULT.autoAttr){
            $(obj).find("ul li").each(function(index,element){
                var curDept = parseInt($(element).attr("data-dept"));
                var nextDept = parseInt($(element).next().attr("data-dept"));
                if (curDept>=nextDept || isNaN(nextDept)){
                    $(element).find("hzw").html("<i class='icon-file-alt' style='color: #3e7c42'></i>").removeClass("HTreeshowOrHideIconHzw").css("cursor","pointer");
                }
            });
        }

        // 图标, 点击隐藏或显示子菜单
        $(obj).find(".HshowOrHideIconHzw").on("click",function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            // 当选中的是叶子的时候,不触发事件
            if ($(this).find("i").hasClass("icon-file-alt")) {
                return
            }
            showOrHide($(this).parent())
        });

        $(obj).find("li").on('mouseover',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            var ul = $(this).closest("ul")

            $(ul).find("li").css({
                "background-color":"",
                "color":""
            })

            $(this).css({
                "background-color":"#6699CC",
                "color":"white"
            })
        });

        // 绑定虚线点击事件
        $(obj).find(".mf-images-click").on('click',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
            showOrHide($(this).closest("li"))
        });

        $(obj).find("li").on('click',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            if (__DEFAULT.nodeSelect == false && $(this).attr("data-attr") == "1"){
                showOrHide($(this))
                return
            }

            // 如果是节点
            // 则不管是否开启checkbox
            // 都一样的处理方式
            var text = $(this).find("span").html();
            var id = $(this).attr("data-id");

            $(obj).find(".HshowSelectValue i").css({
                "border-color":"#888 transparent transparent transparent",
                "border-width":"5px 4px 0px 4px"
            });

            if (!__DEFAULT.checkbox) {
                $(obj).find(".HTreeLi").css("color","")
                $(this).find("span").css("color","red")
            } else {
                // 取消后续事件
                if (window.event != undefined){
                    window.event.cancelBubble = true;
                } else {
                    var event = getEvent()
                    event.stopPropagation()
                }


                var clickInput = $(this).find("input:eq(0)");

                if ($(clickInput).is(":checked")) {
                    $(clickInput).prop("checked",false);
                } else {
                    $(clickInput).prop("checked",true);
                }

                // 判断当前li的层级
                var dept = $(this).attr("data-dept");
                // 获取下一个li对象层级
                var nextDept = $(this).next().attr("data-dept");

                // 如果下一个层级的高度大于当前层级高度,
                // 则选中所有的下级
                if (parseInt(dept) < parseInt(nextDept)){
                    if ($(clickInput).is(":checked")) {
                        $(this).nextAll().each(function (index, element) {
                            if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                                $(element).find("input").prop("checked",true)
                            } else {
                                return false
                            }
                        })
                    } else {
                        $(this).nextAll().each(function (index, element) {
                            if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                                $(element).find("input").prop("checked",false)
                            } else {
                                return false
                            }
                        })
                    }
                }
            }

            $(obj).attr("data-selected",$(this).attr("data-id"))

            if (typeof __DEFAULT.onclick == "function"){
                __DEFAULT.onclick(this);
            };

            if (typeof __DEFAULT.onChange == "function"){
                __DEFAULT.onChange(this);
            }
        });

        $(obj).find("ul").on('mousewheel',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
        });

        if (__DEFAULT.checkbox) {
            // checkbox选择框,绑定事件
            $(obj).find("input[type='checkbox']").on("click",function () {
                // 取消后续事件
                if (window.event != undefined){
                    window.event.cancelBubble = true;
                } else {
                    var event = getEvent()
                    event.stopPropagation()
                }

                // 获取当前层级的li对象
                var curli = $(this).parent();

                // 判断当前li的层级
                var dept = $(curli).attr("data-dept");

                // 获取下一个li对象层级
                var nextDept = $(curli).next().attr("data-dept");

                // 如果下一个层级的高度大于当前层级高度,
                // 则选中所有的下级
                if (parseInt(dept) < parseInt(nextDept)){
                    if ($(this).is(":checked")) {
                        $(curli).nextAll().each(function (index, element) {
                            if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                                $(element).find("input").prop("checked",true)
                            } else {
                                return false
                            }
                        })
                    } else {
                        $(curli).nextAll().each(function (index, element) {
                            if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                                $(element).find("input").prop("checked",false)
                            } else {
                                return false
                            }
                        })
                    }
                }
            });
        }
    };

    $.fn.Hselect = function(param){
        var sel = this
        var obj = document.createElement("div")

        if ( $(sel).attr("hselect") == "true"){
            // 重复初始化Hselect
            var hselect = $(sel).next()
            var displaycss = $(hselect).css("display")
            $(obj).attr("style",$(sel).attr("style"));
            $(obj).css("display",displaycss)

            $(hselect).remove()
            $(sel).html("");
        } else {
            // 第一次初始化Hselect
            $(obj).attr("style",$(sel).attr("style"));
        }
        //init div css
        //get parent class to it
        //get parent css to it
        $(obj).addClass($(sel).attr("class"));
        $(obj).css({"padding":"0px","border":"none"});
        $(obj).css("position","relative");
        $(sel).attr("hselect","true");
        // default parameters
        var __DEFAULT = {
            data: "",
            height:"26px",
            width:"100%",
            border:"#ccc solid 1px",
            fontSize:"13px",
            borderRadius:"5px",
            bgColor:"white",
            placeholder:"--请选择--",

            showLiHeight:"30px",
            showHeight:"230px",
            showBorder:"",
            showFontSize:"14px",
            iconColor:"#ff5763",

            // 值改变触发事件
            onclick:"",

            // select中默认值
            value:"hselectdefault",

            // 是否禁止选择
            disabled:false,

            // checkbox选择框,
            // 默认禁用选择框,如果设置成true,则显示考勤选怎狂
            checkbox:false,

            // 是否启动自动化节点/叶子处理
            // 如果开启,则将会把末级节点全部处理成叶子
            autoAttr: true,

            // 默认开启节点可以选中
            // 如果设置成false, 则不允许选择节点,在单击节点时,将会显示或隐藏子节点
            nodeSelect: true,

            dashed:true,

        };

        // 记录是否为层级结构
        // true表示是层级结构
        // false表示非层级结构
        var level_flag = false;

        $.extend(true,__DEFAULT,param);

        if (__DEFAULT.data.length > 0 && __DEFAULT.data[0].attr != undefined) {
            __DEFAULT.autoAttr = false;
        }

        // set showBorder to border style
        if (__DEFAULT.showBorder==""){
            __DEFAULT.showBorder = __DEFAULT.border
        };

        var getEvent = function(){

            if(window.event)    {
                return window.event;
            }
            var func = getEvent.caller;

            while( func != null ){
                var arg0 = func.arguments[0];
                if(arg0){
                    if((arg0.constructor==Event || arg0.constructor ==MouseEvent
                        || arg0.constructor==KeyboardEvent)
                        ||(typeof(arg0)=="object" && arg0.preventDefault
                        && arg0.stopPropagation)){
                        return arg0;
                    }
                }
                func = func.caller;
            }
            return null;
        };
        /*
         * This function sort array.
         * Accept One Array Variable.
         * */
        function sortTree(a){

            // load result sorted
            var list = [];

            // get select's options
            // append it to new select which simulate by ul li
            if (Object.prototype.toString.call(a) == '[object Array]'){
                $(sel).find("option").each(function(index,element){
                    var ijs = {}
                    ijs.id = $(element).val();
                    ijs.text = $(element).text()
                    a.push(ijs)
                })
            } else {
                $(sel).find("option").each(function(index,element){
                    var ijs = {}
                    ijs.id = $(element).val();
                    ijs.text = $(element).text()
                    list.push(ijs)
                })
                return list
            }

            //set max dept val
            var MAXDEPT = 8;

            var INDEX = 1;

            function getRoots(arr){
                var Roots = [];
                for(var i = 0; i < arr.length;i++){
                    var rootFlag = true
                    for ( var j = 0; j < arr.length;j++){
                        if (arr[i].parentId == arr[j].id){
                            rootFlag = false
                            break
                        }
                    }
                    if (rootFlag == true){
                        Roots.push(arr[i])
                    }
                }
                return Roots
            }

            function traversed(node,arr){
                if (++INDEX > MAXDEPT){
                    console.log("递归超过8层,为保护计算机,退出递归");
                    return
                }
                for (var i = 0; i < arr.length; i++){

                    if (node == arr[i].parentId){
                        arr[i].dept = INDEX
                        list.push(arr[i])
                        traversed(arr[i].id,arr)
                    }
                }
                INDEX--;
            }

            function listElem(roots,arr){
                for (var i = 0; i < roots.length; i++){
                    roots[i].dept = INDEX
                    list.push(roots[i])
                    traversed(roots[i].id,arr)
                }
            }

            listElem(getRoots(a),a)

            return list
        };

        // 生成树形线
        // 辅助查看
        function genImgLine(dept,attr) {
            var i = 0;
            var img_src = document.createElement("yph")

            if (dept == 0 || dept == undefined){
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "20px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/line.gif");
                    img_src.appendChild(img);
                } else {
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img.style.width = "8px";
                    img_src.appendChild(img);
                }
                return img
            }

            for (;i<dept-1;i++) {
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "20px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/line.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            }

            if (attr == "1") {
                // 节点
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "20px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/minus.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            } else if (attr == "0") {
                // 叶子
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "20px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/join.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            } else {
                // 没有指定叶子,节点标识
                // 节点
                var img = document.createElement("img")
                img.style.height = __DEFAULT.showLiHeight;
                img.style.width = "20px";
                img.style.lineHeight = __DEFAULT.showLiHeight;
                if (__DEFAULT.dashed) {
                    img.setAttribute("src","/static/images/icon_select/minus.gif");
                    img_src.appendChild(img);
                } else {
                    if (i == 0) {
                        img.style.width = "8px";
                    }
                    img.setAttribute("src","/static/images/icon_select/empty.gif");
                    img_src.appendChild(img);
                }
            }
            return img_src
        }

        // 产生一行li
        function genULli(attr,id,dept,text) {
            var li = document.createElement("li")
            li.setAttribute("data-attr",attr);
            li.setAttribute("data-id",id);
            li.setAttribute("data-dept",dept);
            li.style.margin = "0px";
            li.style.textAlign = "left";
            li.style.fontSize = "500";
            li.style.height = __DEFAULT.showLiHeight;
            li.style.lineHeight = __DEFAULT.showLiHeight;
            li.style.fontSize = __DEFAULT.showFontSize;
            li.style.cursor = "pointer";
            li.style.position = "relative";

            var hzw = document.createElement("hzw")
            hzw.setAttribute("class","HshowOrHideIconHzw");
            hzw.style.height = __DEFAULT.showLiHeight;
            hzw.style.lineHeight = __DEFAULT.showLiHeight;
            hzw.style.width = "20px";
            hzw.style.marginLeft = "3px";
            hzw.style.display = "inline-block";
            var i = document.createElement("i")
            if (attr == "0") {
                i.setAttribute("class","icon-file-alt")
                i.style.color = "green";
            } else {
                i.setAttribute("class","icon-folder-open");
                i.style.color = "#ccb008";
            }
            hzw.appendChild(i)

            var span = document.createElement("span");
            span.style.height = __DEFAULT.showLiHeight;
            span.style.lineHeight = __DEFAULT.showLiHeight;
            span.style.position = "absolute";
            span.innerHTML = text;


            var img_src = genImgLine(dept,attr)
            li.appendChild(img_src)


            // 如果selectBox开启多选,则显示勾选框
            if (__DEFAULT.checkbox) {
                var input = document.createElement("input")
                input.setAttribute("name","select_check")
                input.setAttribute("type","checkbox")
                input.style.height = "15px";
                input.style.width = "15px";
                input.style.marginTop = "0px";
                li.appendChild(input);
            }

            li.appendChild(hzw);
            li.appendChild(span)
            return li
        }

        // 替换select显示区域.
        // 重新构建选择框
        function genDiv() {
            var div = document.createElement("div")
            div.style.cursor = "pointer";
            div.style.backgroundColor = __DEFAULT.bgColor;
            div.style.textAlign = "left !important";
            div.style.width = "100%";
            div.style.height = __DEFAULT.height;
            div.style.lineHeight = __DEFAULT.height;
            div.style.paddingLeft = "10px";
            div.style.display = "inline-block"
            div.style.border = "#ccc solid 1px";
            div.style.borderRadius = __DEFAULT.borderRadius;
            div.setAttribute("class","HshowSelectValue")
            div.style.position = "relative";

            var span = document.createElement("span")
            span.style.height = __DEFAULT.height;
            span.style.fontSize = __DEFAULT.fontSize;
            span.style.maxWidth = __DEFAULT.width;
            span.style.overflow = "hidden";
            span.style.wordBreak = "keep-all";
            span.style.whitespace = "nowrap";
            span.style.display = "inline-block";
            span.innerHTML = "<i style='color: #959595;font-size: 12px;'>"+__DEFAULT.placeholder+"</i>";

            var hzw = document.createElement("hzw")
            hzw.style.position = "absolute";
            hzw.style.width = "20px";
            hzw.style.right = "0px";
            hzw.style.height = __DEFAULT.height;
            hzw.style.lineHeight = __DEFAULT.height;

            var i = document.createElement("i")
            i.style.borderColor = "#888 transparent transparent transparent";
            i.style.borderWidth = "5px 4px 0px 4px"
            i.style.height = "0";
            i.style.left = "50%";
            i.style.marginLeft = "-4px";
            i.style.marginTop = "-3px";
            i.style.position = "absolute"
            i.style.top = "50%";
            i.style.width = "0px";
            i.style.borderStyle = "solid";
            hzw.appendChild(i)

            div.appendChild(span)
            div.appendChild(hzw)
            return div;
        }

        // 根据数据,
        // 生成需要展示的数据
        function genTreeUI(a){
            var div = document.createElement("div")
            div.setAttribute("class","HselectShowAreaHuangZhanWei");
            div.style.whitespace = "nowrap";
            div.style.backgroundColor = "#fefefe";
            div.style.border = __DEFAULT.showBorder
            div.style.borderRadius = " 3px";
            div.style.display = "none";
            div.style.position = "absolute";
            div.style.zIndex  = 2147483647;
            div.style.top = __DEFAULT.height;
            div.style.width = __DEFAULT.width;

            var input = document.createElement("input")
            input.style.border = "#6699CC solid 1px";
            input.style.paddingLeft = "5px";
            //input.style.margin = "5px 5px";
            input.style.height = __DEFAULT.showLiHeight;
            input.style.width = "100%"
            div.appendChild(input)

            var opt = document.createElement("ul")
            opt.style.zIndex = 9999;
            opt.style.padding = "0px";
            opt.style.listStyle = "none";
            opt.style.margin = "0px";
            opt.style.maxHeight = __DEFAULT.showHeight;
            opt.style.overflow = "auto";

            for(var i = 0; i < a.length; i++){
                var pd = parseInt(a[i].dept)
                if (pd > 1) {
                    level_flag = true;
                }
                if (isNaN(pd)){
                    pd = 1
                }
                opt.appendChild(genULli(a[i].attr,a[i].id,a[i].dept,a[i].text));
            }
            div.appendChild(opt)
            return div
        };

        function adjustImg() {
            if (__DEFAULT.dashed && level_flag) {
                var ul = ui.getElementsByTagName("ul")
                if (ul.length > 0) {
                    var yph = ul[0].firstElementChild.getElementsByTagName("yph");
                    if (yph.length > 0) {
                        if (yph[0].firstElementChild.getAttribute("src") == "/static/images/icon_select/minus.gif"){
                            yph[0].firstElementChild.setAttribute("src","/static/images/icon_select/minusbottom.gif")
                        }
                        if (yph[0].firstElementChild.getAttribute("src") == "/static/images/icon_select/join.gif"){
                            yph[0].firstElementChild.setAttribute("src","/static/images/icon_select/upjoinbutton.gif")
                        }
                    }
                }
                var children = ul[0].childNodes;
                var length = children.length;
                var img_index = children[length-1].getAttribute("data-dept");
                for (var i = 1; i < length; i++){
                    var curli = children[i]
                    var nextli = children[i+1]
                    if (nextli == undefined) {
                        var curdept = curli.getAttribute("data-dept")
                        var curNode = curli.getAttribute("data-attr")
                        if (curNode == "0") {
                            var yph = curli.getElementsByTagName("yph")
                            if (yph.length >= 0 && !isNaN(curdept)){
                                yph[0].childNodes[parseInt(curdept)-1].setAttribute("src","/static/images/icon_select/joinbottom.gif");
                            }
                        }
                    } else {
                        var curdept = curli.getAttribute("data-dept")
                        var nextdept = nextli.getAttribute("data-dept")

                        var curNode = curli.getAttribute("data-attr")
                        var nextNode = nextli.getAttribute("data-attr")
                        if (parseInt(curdept) > parseInt(nextdept)){
                            // 下级节点是节点，当前选中想层级大于下级接节点
                            if (curNode == "0") {
                                var yph = curli.getElementsByTagName("yph")
                                if (yph.length >= 0 && !isNaN(curdept)){
                                    yph[0].childNodes[parseInt(curdept)-1].setAttribute("src","/static/images/icon_select/joinbottom.gif");
                                }
                            }
                        }
                    }

                    var yph = children[length-i].getElementsByTagName("yph")
                    if (img_index > 0) {
                        if (children[length-i].getAttribute("data-attr") == "1") {
                            var dept = children[length-i].getAttribute("data-dept");
                            if (parseInt(dept) < img_index) {
                                img_index = parseInt(dept);
                                yph[0].lastElementChild.setAttribute("src","/static/images/icon_select/minustop.gif")
                            }
                        }
                        for (var j = 0; j < img_index - 1; j++){
                            yph[0].childNodes[j].setAttribute("src","/static/images/icon_select/empty.gif")
                        }
                    }

                    if (children[length-i].getAttribute("data-attr") == "1") {
                        var imgs = children[length-i].getElementsByTagName("img")
                        if (imgs.length > 0) {
                            imgs[imgs.length-1].setAttribute("class","mf-images-click")
                        }
                    }
                }


                // 处理第一个
                var yph = children[0].getElementsByTagName("yph")
                if (img_index > 0) {
                    if (children[0].getAttribute("data-attr") == "1") {
                        var dept = children[0].getAttribute("data-dept");
                        if (parseInt(dept) < img_index) {
                            img_index = parseInt(dept);
                            yph[0].lastElementChild.setAttribute("src","/static/images/icon_select/minusright.gif")
                        }
                    }
                    for (var j = 0; j < img_index - 1; j++){
                        yph[0].childNodes[j].setAttribute("src","/static/images/icon_select/empty.gif")
                    }
                }

                if (children[0].getAttribute("data-attr") == "1") {
                    var imgs = children[0].getElementsByTagName("img")
                    if (imgs.length > 0) {
                        imgs[imgs.length-1].setAttribute("class","mf-images-click")
                    }
                }
            }
        }

        function showUp(e){
            var dept = $(e).attr("data-dept")
            $(e).prevAll().each(function(index,element){
                if (parseInt(dept)>parseInt($(element).attr("data-dept"))){
                    $(element).show();
                    dept = $(element).attr("data-dept")
                }
            })
        };

        // 初始化select框
        // 然后隐藏select框
        function initSelect(selObj,arr){
            for (var i = 0; i < arr.length; i++){
                var opt = document.createElement("option")
                opt.setAttribute("value",arr[i].id)
                opt.innerHTML = arr[i].text;
                selObj.append(opt)
            }
            $(selObj).hide();
        };


        function modifyIcon(e,showOrHide) {
            if (showOrHide) {
                // 显示
                if ($(e).find("i").hasClass("icon-folder-close")) {
                    $(e).find("i").addClass("icon-folder-open").css({"color":"#ccb008"}).removeClass("icon-folder-close");
                }
            } else {
                // 隐藏
                if ($(e).find("i").hasClass("icon-folder-open")) {
                    $(e).find("i").addClass("icon-folder-close").removeClass("icon-folder-open");
                }
            }
        }

        function modifyImgLine(e,showOrHide) {
            if (showOrHide && __DEFAULT.dashed && $(e).find("img").last() != undefined) {
                // 显示
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plus.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minus.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plusbottom.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minusbottom.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plustop.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minustop.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/plusright.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/minusright.gif")
                    return
                }
            } else if ( __DEFAULT.dashed && $(e).find("img").last() != undefined) {
                // 隐藏
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minus.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plus.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minusbottom.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plusbottom.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minustop.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plustop.gif")
                    return
                }
                if ($(e).find("img").last().attr("src") == "/static/images/icon_select/minusright.gif") {
                    $(e).find("img").last().attr("src","/static/images/icon_select/plusright.gif")
                    return
                }
            }
        }

        // 隐藏过现实下级信息
        function showOrHide(e){
            // 参数是被点击的哪一行

            // 获取当前被点击的哪一行的层级
            var dept = $(e).attr("data-dept")

            // 获取下一行对象
            var nextObj = $(e).next()

            // 获取下一行层级
            var nextDept = $(nextObj).attr("data-dept")

            // 获取下一行状态
            var nextDisplay = $(nextObj).css("display")

            // 如果下一行是隐藏状态, 则修改成现实
            // 如果下一行是显示状态,则修改为隐藏
            if (nextDisplay == "none" && parseInt(nextDept) > parseInt(dept)){

                // 如果检查到图标是关闭状态状态
                // 则修改为打开状态
                modifyIcon(e,true)

                //修改线条
                //如果展开,则替换成 减号
                //如果隐藏,则替换成 加号
                modifyImgLine(e,true)

                $(e).nextAll().each(function(index,element) {
                    if (parseInt(dept)+1==parseInt($(element).attr("data-dept"))){

                        $(element).show();
                        modifyIcon(element,false)
                        modifyImgLine(element,false)

                    } else if (parseInt(dept)+1 < parseInt($(element).attr("data-dept"))) {
                        // 切换成关闭状态
                        modifyIcon(element,false)

                        $(element).hide();

                        modifyImgLine(element,false)
                    } else {
                        // 如果遇到下一层级的高度小于被选中的层级高度
                        // 则退出执行过程
                        return false
                    }
                })
            }else if (nextDisplay == "none" && parseInt(nextDept)<=parseInt(dept)){
                // 如果下一行被隐藏
                // 且下一行的层级下雨当前层级
                // 则表示没有下一层极,直接退出
                return
            }else if (nextDisplay != "none" && parseInt(nextDept)>parseInt(dept)){
                modifyImgLine(e,false);
                modifyIcon(e,false);

                $(e).nextAll().each(function(index,element){
                    if (parseInt(dept)<parseInt($(element).attr("data-dept"))){
                        modifyImgLine(e,false)
                        modifyIcon(e,false)
                        $(element).hide();
                    }else if (parseInt(dept)>=parseInt($(element).attr("data-dept"))){
                        return false
                    }
                })
            }else {
                return
            }
        };

        // 如果非层级结构
        // 则删除虚线和图标
        function adjustnormaltree() {
            if (!level_flag) {
                $(ui).find("li").each(function (index, element) {
                    $(element).find("hzw").remove();
                    $(element).find("img").remove();
                    $(element).css("padding-left","8px");
                })
            }
        };

        function adjustAttr() {
            // 修正叶子节点
            // 如果设置了成员属性 attr == false, 则执行这个操作
            if (__DEFAULT.autoAttr) {
                $(ui).find("ul li").each(function(index,element){
                    var curDept = parseInt($(element).attr("data-dept"))
                    var nextDept = parseInt($(element).next().attr("data-dept"))
                    if (curDept>=nextDept || isNaN(nextDept)){
                        $(element).attr("data-attr","0");
                        $(element).find("hzw i").removeClass("icon-folder-open icon-folder-close").addClass("icon-file-alt").css("color","green");
                        if (__DEFAULT.dashed && level_flag) {
                            $(element).find("img").last().attr("src","/static/images/icon_select/join.gif");
                        }
                    } else {
                        $(element).attr("data-attr","1")
                    }
                });
            }
        }

        function initDefaultValue() {

            if (__DEFAULT.checkbox) {
                //开启了多选模式
                $(__DEFAULT.value).each(function (index, element) {
                    var $LiObj = $(obj).find("li[data-id='"+element+"']");
                    $LiObj.find("input").prop("checked",true);
                    var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+element+"']");
                    if (inputObj.length == 0){
                        var check = $(obj).find(".HshowSelectValue span hzwySelect");
                        if (check.length == 0) {
                            // 第一次选择，删除提示信息
                            $(obj).find(".HshowSelectValue span i").remove();
                        }
                        var selectObj = document.createElement("hzwySelect");
                        selectObj.setAttribute("data-id",element);
                        selectObj.style.height = __DEFAULT.height;
                        selectObj.style.lineHeight = __DEFAULT.height;
                        selectObj.innerHTML = $LiObj.find("span").html();
                        selectObj.style.marginLeft = "2px";
                        selectObj.className = "label label-default";
                        $(obj).find(".HshowSelectValue span").append(selectObj);
                    }
                });
            } else {
                // 单选模式
                var defValu = $(sel).find("option[value='"+__DEFAULT.value+"']");
                if (defValu.length != 0) {
                    $(sel).val(__DEFAULT.value);
                    var text = $(sel).find("option:selected").text()
                    $(obj).find(".HshowSelectValue span").html(text)
                }
            }
        };

        var ui = genTreeUI(sortTree(__DEFAULT.data));
        // 如果没有层级,则清除第一层级的叶子
        adjustnormaltree();
        // 调整li属性,
        // 如果没有设置attr这个字段,则自动匹配
        adjustAttr();

        // 设置虚线
        adjustImg()

        var pdiv = genDiv();

        initSelect(sel,__DEFAULT.data);
        obj.appendChild(pdiv)
        obj.appendChild(ui);

        $(sel).after(obj);

        // 清除select的默认选中状态，确保select初始化后，没有任何值被选中
        // 如果在初始化Hselect时，指定了初始值，则使用初始值
        initDefaultValue();

        if (__DEFAULT.disabled){
            // 如果select禁止选择,
            // 不需要绑定触发事件
            $(obj).find(".HshowSelectValue").css("background-color","#f5f5f5");
            return
        }

        // 让搜索框获取焦点
        $(obj).find("input:eq(0)").focus();

        // input 框中输入事件，当用户在Hselect的下拉框中搜索时，触发这个事件
        $(obj).find("input:eq(0)").on('input',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            var inpText = $(this).val();
            if (inpText == ""){
                $(obj).find("ul li").show();
                return
            }
            $(obj).find("ul li").each(function(index,element){
                if ($(element).find("span").html().indexOf(inpText)>=0){
                    $(element).show()
                    showUp(element)
                }else{
                    $(element).hide()
                }
            })
        });

        // 当用户在搜索框中点击鼠标左键时，触发这个事件。
        $(obj).find("input:eq(0)").on('click',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
            $(this).focus();
        });


        // checkbox选择框,绑定事件
        $(obj).find("input[name='select_check']").on("click",function () {
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            // 获取当前层级的li对象
            var curli = $(this).parent();

            // 选中区域的内容
            var name = curli.find("span").html();
            var sid = curli.attr("data-id");

            if ($(this).is(":checked")) {
                var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+sid+"']");
                if (inputObj.length == 0){
                    var check = $(obj).find(".HshowSelectValue span hzwySelect");
                    if (check.length == 0) {
                        // 第一次选择，删除提示信息
                        $(obj).find(".HshowSelectValue span i").remove();
                    }
                    var selectObj = document.createElement("hzwySelect");
                    selectObj.setAttribute("data-id",sid);
                    selectObj.style.height = __DEFAULT.height;
                    selectObj.style.lineHeight = __DEFAULT.height;
                    selectObj.innerHTML = name;
                    selectObj.style.marginLeft = "2px";
                    selectObj.className = "label label-primary";
                    $(obj).find(".HshowSelectValue span").append(selectObj);
                }
            } else {
                var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+sid+"']");
                $(inputObj).remove();
                var check = $(obj).find(".HshowSelectValue span hzwySelect");
                if (check.length == 0) {
                    // 第一次选择
                    // 删除提示信息
                    $(obj).find(".HshowSelectValue span").html("<i style='color: #959595;font-size: 12px;'>"+__DEFAULT.placeholder+"</i>");
                }
            }

            // 判断当前li的层级
            var dept = $(curli).attr("data-dept");

            // 获取下一个li对象层级
            var nextDept = $(curli).next().attr("data-dept");

            // 如果下一个层级的高度大于当前层级高度,
            // 则选中所有的下级
            if (parseInt(dept) < parseInt(nextDept)){
                if ($(this).is(":checked")) {
                    $(curli).nextAll().each(function (index, element) {
                        if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                            $(element).find("input").prop("checked",true)
                            var selectObj = document.createElement("hzwySelect");
                            selectObj.setAttribute("data-id",$(element).attr("data-id"));
                            selectObj.style.height = __DEFAULT.height;
                            selectObj.style.lineHeight = __DEFAULT.height;
                            selectObj.innerHTML = $(element).find("span").html();
                            selectObj.style.marginLeft = "2px";
                            selectObj.className = "label label-primary";
                            $(obj).find(".HshowSelectValue span").append(selectObj);
                        } else {
                            return false
                        }
                    })
                } else {
                    $(curli).nextAll().each(function (index, element) {
                        if (parseInt($(element).attr("data-dept")) > parseInt(dept)) {
                            $(element).find("input").prop("checked",false)
                            var sid = $(element).attr("data-id");
                            var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+sid+"']");
                            $(inputObj).remove();
                            var check = $(obj).find(".HshowSelectValue span hzwySelect");
                            if (check.length == 0) {
                                // 第一次选择
                                // 删除提示信息
                                $(obj).find(".HshowSelectValue span").html("<i style='color: #959595;font-size: 12px;'>"+__DEFAULT.placeholder+"</i>");
                            }
                        } else {
                            return false
                        }
                    })
                }
            }
        });

        // 图标, 点击隐藏或显示子菜单
        $(obj).find(".HshowOrHideIconHzw").on("click",function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            // 当选中的是叶子的时候,不触发事件
            if ($(this).find("i").hasClass("icon-file-alt")) {
                return
            }

            showOrHide($(this).parent())
        });

        $(obj).find("li").on('mouseover',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            var ul = $(this).closest("ul")

            $(ul).find("li").css({
                "background-color":"",
                "color":""
            })

            $(this).css({
                "background-color":"#6699CC",
                "color":"white"
            })
        });

        // 绑定虚线点击事件
        $(obj).find(".mf-images-click").on('click',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
            showOrHide($(this).closest("li"))
        });

        $(obj).find("li").on('click',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            if (__DEFAULT.nodeSelect == false && $(this).attr("data-attr") == "1"){
                showOrHide($(this))
                return
            }

            if (__DEFAULT.checkbox == true) {
                if ($(this).attr("data-attr") == "0"){
                    // 如果开启了checkbox, 则表示seledct不允填写值
                    // 则提供多选,如果这个叶子节点已经被选中
                    // 则取消选中状态
                    // 否则选中这个叶子
                    var sid = $(this).attr("data-id");

                    if ($(this).find("input").is(":checked")) {
                        $(this).find("input").prop("checked",false)
                        var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+sid+"']");
                        $(inputObj).remove();
                        var check = $(obj).find(".HshowSelectValue span hzwySelect");
                        if (check.length == 0) {
                            // 第一次选择
                            // 删除提示信息
                            $(obj).find(".HshowSelectValue span").html("<i style='color: #959595;font-size: 12px;'>"+__DEFAULT.placeholder+"</i>");
                        }
                    } else {
                        $(this).find("input").prop("checked",true)

                        var inputObj = $(obj).find(".HshowSelectValue span hzwySelect[data-id='"+sid+"']");
                        if (inputObj.length == 0){
                            var check = $(obj).find(".HshowSelectValue span hzwySelect");
                            if (check.length == 0) {
                                // 第一次选择，删除提示信息
                                $(obj).find(".HshowSelectValue span i").remove();
                            }
                            var selectObj = document.createElement("hzwySelect");
                            selectObj.setAttribute("data-id",sid);
                            selectObj.style.height = __DEFAULT.height;
                            selectObj.style.lineHeight = __DEFAULT.height;
                            selectObj.innerHTML = $(this).find("span").html();
                            selectObj.style.marginLeft = "2px";
                            selectObj.className = "label label-primary";
                            $(obj).find(".HshowSelectValue span").append(selectObj);
                        }
                    }
                } else if ($(this).attr("data-attr") == "1") {
                    showOrHide($(this))
                    return
                }
            } else {
                // 如果是节点
                // 则不管是否开启checkbox
                // 都一样的处理方式
                var text = $(this).find("span").html();
                var id = $(this).attr("data-id");
                $(sel).val(id);
                $(this).closest("div").prev().find("span").html(text);
                $(this).closest("div").hide();

                $(obj).find(".HshowSelectValue i").css({
                    "border-color":"#888 transparent transparent transparent",
                    "border-width":"5px 4px 0px 4px"
                });

                if (typeof __DEFAULT.onclick == "function"){
                    __DEFAULT.onclick();
                };
            }
        });

        $(obj).find("ul").on('mousewheel',function(){
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }
        });

        $(obj).find(".HshowSelectValue").on('click',function(){
            var showUiStatus = $(obj).find(".HselectShowAreaHuangZhanWei").css("display")
            // 取消后续事件
            if (window.event != undefined){
                window.event.cancelBubble = true;
            } else {
                var event = getEvent()
                event.stopPropagation()
            }

            if (showUiStatus == "none"){
                $(".HselectShowAreaHuangZhanWei").hide()
                var nextObj = $(this).next();
                $(nextObj).show();
                $(nextObj).find("input:eq(0)").focus();
                $(nextObj).find("ul").scrollTop(0);
                $(nextObj).find("ul").scrollLeft(0);

                $(obj).find(".HshowSelectValue i").css({
                    "border-color":"transparent transparent #888 transparent",
                    "border-width":"0px 4px 5px 4px"
                });

            }else{
                $(obj).find(".HshowSelectValue i").css({
                    "border-color":"#888 transparent transparent transparent",
                    "border-width":"5px 4px 0px 4px"
                });

                $(obj).find("ul").closest("div").hide();
            }
        });

        $(document).on('click',function(){
            $(obj).find("ul").closest("div").hide();
            $(obj).find(".HshowSelectValue i").css({
                "border-color":"#888 transparent transparent transparent",
                "border-width":"5px 4px 0px 4px"
            });
        });

        //when select was change
        //change show values
        $(sel).on('change',function(){
            var text = $(this).find("option:selected").text()
            $(obj).find(".HshowSelectValue span").html(text)
            if (typeof __DEFAULT.onclick == "function"){
                __DEFAULT.onclick();
            }
        });

    };
}(jQuery));

/*
 * 弹出框效果
 * */
(function($){

    $.extend({
        Notify:function(param){
            var DEFAULT = {
                icon:"icon-ok",
                caption:"",
                title:"温馨提示：",
                message:"请求成功",
                content:"",
                type:"success",
                position:null,
                placement: {
                    from: "top",
                    align: "center"
                },
            };

            $.extend(true,DEFAULT,param);
            switch (DEFAULT.type){
                case "success":DEFAULT.icon = "icon-ok";break;
                case "danger":DEFAULT.icon = "icon-remove" ; break;
                case "info" : DEFAULT.icon = "icon-bullhorn";break;
                case "primary": DEFAULT.icon = "icon-bell" ; break;
                case "warning": DEFAULT.icon = "icon-warning-sign"; break;
                default :
                    DEFAULT.icon = "icon-bullhorn"
            }

            $.notify({
                // options
                icon: DEFAULT.icon,
                title: DEFAULT.title,
                message:DEFAULT.message,
                url: '',
                target: '_blank'
            },{
                // settings
                element: 'body',
                position: DEFAULT.position,
                type: DEFAULT.type,
                allow_dismiss: true,
                newest_on_top: true,
                showProgressbar: false,
                placement:DEFAULT.placement,
                offset: 20,
                spacing: 10,
                z_index: 2147483647,
                delay: 3000,
                timer: 1000,
                url_target: '_blank',
                mouse_over: null,
                animate: {
                    enter: 'animated fadeInDown',
                    exit: 'animated fadeOutUp'
                },
                onShow: null,
                onShown: null,
                onClose: null,
                onClosed: null,
                icon_type: 'class',
            });
        },
        HAjaxRequest:function(a){
            var b = {
                type:"get",
                url:"",
                data:"",
                cache:false,
                async:false,
                dataType:"json",
                beforeSend:function () {
                },
                complete:function () {
                },
                error:function(m) {
                    var msg = "";
                    try {
                        msg = JSON.parse(m.responseText);
                        jQuery.Notify({
                            title: "温馨提示：",
                            message: msg.error_msg,
                            type: "danger",
                        });
                        console.log("return message is :",msg);
                        console.log("return code is :",msg.error_code);
                        console.log("return details error info:",msg.error_details);
                        console.log("return version: ",msg.version);
                    } catch(e) {
                        console.log(m);
                        console.log(e);
                    }
                },
                success:function(b){
                }
            };
            $.extend(!0,b,a);
            "delete"==b.type.toLowerCase()?(
                b.data._method="DELETE",
                    $.ajax({
                        type:"post",
                        url:b.url,
                        cache:b.cache,
                        async:b.async,
                        data:b.data,
                        dataType:b.dataType,
                        beforeSend:b.beforeSend,
                        complete:b.complete,
                        error:b.error,
                        success:function(a){
                            b.success(a)}
                    })
            ):$.ajax({
                type:b.type,
                url:b.url,
                cache:b.cache,
                async:b.async,
                data:b.data,
                dataType:b.dataType,
                beforeSend:b.beforeSend,
                complete:b.complete,
                error:b.error,
                success: function(da) {
                    b.success(da)
                },
            })
        },
        Hdownload:function (params) {
            var __DEFAULT = {
                url:"",
                name:"导出数据",
            };
            $.extend(true,__DEFAULT,params);

            if (__DEFAULT.name == "" || __DEFAULT.name==undefined) {
                __DEFAULT.name = "导出参数信息"
            }

            var expname = __DEFAULT.name+".xlsx";

            var x=new XMLHttpRequest();
            x.open("GET",__DEFAULT.url, true);
            x.responseType = 'blob';
            x.onload=function(e){
                download(x.response, expname, "application/vnd.ms-excel" );
            };
            x.send();
        },
        Hupload:function (param) {
            var __DEFAULT = {
                header:"数据导入",
                height:"360px",
                url:"",
                callback:function () {
                },
            };

            $.extend(true,__DEFAULT,param)

            var uploader;
            var upload_modual = '<div class="row"><div class="col-sm-12 col-md-12 col-lg-12"><div class="pull-left"><div id="h-upload-select-file-btn">选择文件</div></div></div><div class="col-sm-12 col-md-12 col-lg-12 uploader-list" style="margin-top: 15px;"><table id="h-selected-files-list" class="table table-responsive table-bordered"><thead><tr><th>文件名</th><th>大小</th></tr></thead><tbody></tbody></table></div></div>'

            $.Hmodal({
                header:__DEFAULT.header,
                body:upload_modual,
                height:__DEFAULT.height,
                submitDesc:"上传",
                cancelDesc:"关闭",
                preprocess:function () {
                    uploader = WebUploader.create({

                        // swf文件路径
                        swf: '/webuploader/dist/Uploader.swf',

                        // 文件接收服务端。
                        server: __DEFAULT.url,

                        // 选择文件的按钮。可选。
                        // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                        pick: '#h-upload-select-file-btn',

                        // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！
                        resize: false
                    });
                    uploader.on('beforeFileQueued',function () {
                        uploader.reset();
                    });
                    uploader.on( 'fileQueued', function( file ) {

                        var unit = "KB"
                        var size = (file.size/1024).toFixed(0)
                        if (size > 1024) {
                            size = (size/1024).toFixed(2)
                            if (size > 256) {
                                $.Notify({
                                    title:"温馨提示:",
                                    message:"上传文件大于256M,无法上传",
                                    type:"danger",
                                })
                                uploader.reset();
                                return
                            }
                            unit = "MB"
                        }
                        var v = size +" "+ unit

                        var optHtml = "<tr><td>"+file.name+"</td><td>"+v+"</td></tr>"

                        $("#h-selected-files-list").find("tbody").html(optHtml)

                    });

                    uploader.on("uploadError",function (file) {
                        $.Notify({
                            title:"温馨提示:",
                            message:"上传失败,请联系管理员",
                            type:"info",
                        });
                        $("#h-hauth-org-upload-progress").css("width","100%");
                        $("#h-hauth-org-upload-progress").removeClass("progress-bar-info progress-bar-striped").addClass("progress-bar-danger")
                        $("#h-hauth-org-upload-progress span").html("导入失败")
                    });

                },
                callback:function () {

                    if (uploader.getFiles().length == 0){
                        $.Notify({
                            message:"请选择上传文件",
                            type:"info",
                        })
                        return
                    }

                    uploader.on("uploadSuccess",function (file,response ) {
                        $.Notify({
                            title:"温馨提示:",
                            message:response.data,
                            type:"success",
                        });
                        $("#h-hauth-org-upload-progress span").html("100%")
                        $("#h-hauth-org-upload-progress").css("width","100%");

                        $("#h-hauth-org-upload-progress").removeClass("progress-bar-info progress-bar-striped").addClass("progress-bar-success")

                        if (typeof __DEFAULT.callback == "function"){
                            __DEFAULT.callback()
                        }
                    });
                    uploader.upload();
                    if ($("#h-hauth-org-upload-progress").html() == undefined) {
                        $("#h-selected-files-list").find("tbody").append('<tr><td colspan="2"><span>上传进度:</span><div class="progress" style="margin-top: 5px;"><div id="h-hauth-org-upload-progress" class="progress-bar progress-bar-info progress-bar-striped active" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"><span>0%</span></div></div></td></tr>')
                    } else {
                        $.Notify({
                            title:"温馨提示:",
                            message:"已经上传完成",
                            type:"info",
                        });
                        return
                    }
                    uploader.on("uploadProgress",function (file, percentage) {
                        if (percentage==1) {
                            percentage = 0.99
                        }
                        var p = percentage*100+"%"
                        $("#h-hauth-org-upload-progress span").html(p)
                        $("#h-hauth-org-upload-progress").css("width",p);
                    });
                },
            })
        },
        Hmodal:function(param){
            var __DEFAULT = {
                callback : "",
                preprocess: "",
                width:"800px",
                height:"494px ",

                header:"弹框信息",
                headerHeight:"40px",
                headerFontSize:"14px",
                headerFontColor:"",
                body:"",
                footer:"",
                executing:function (obj) {
                    var m = $(obj).find(".modal-content")[0];
                    var spinnner = $.Hspinner(m);
                    $(spinnner).delay("fast").queue(function () {
                        __DEFAULT.callback(obj);
                        spinnner.spin();
                        $(spinnner.modal).remove();
                        //如果已经没有模态框出现，清理掉屏障
                        if ($(".modal.fade.in").length == 0) {
                            $(".modal-backdrop.fade.in:last").remove();
                        }
                    })
                },

                footerBtnStatus:true,
                submitBtn:true,
                submitIcon:"icon-ok",
                submitDesc:"提交",

                cancelBtn:true,
                cancelIcon:"icon-remove",
                cancelDesc:"取消",
            }
            $.extend(true,__DEFAULT,param)

            //初始化弹框主体
            function init(){
                var mframe='<div class="modal-dialog" style="width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-content h-modal-content" style="width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-header h-modal-header" style="height: '+__DEFAULT.headerHeight+'; line-height: '+__DEFAULT.headerHeight+'; padding: 0px;">'+
                    '<button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="height: '+__DEFAULT.headerHeight+'; line-height: '+__DEFAULT.headerHeight+'; width: 30px; padding-top: 2px;">×</button>'+
                    '<h4 class="modal-title" style="margin-left: 15px;height: '+__DEFAULT.headerFontSize+';color: '+__DEFAULT.headerFontColor+'; line-height: '+__DEFAULT.headerHeight+';font-weight: 600; font-size: '+__DEFAULT.headerFontSize+'">'+__DEFAULT.header+'</h4>'+
                    '</div>'+
                    '<div class="modal-body" style="width: '+__DEFAULT.width+'; overflow-y: auto">'+__DEFAULT.body+'</div>'+
                    '<div class="modal-footer btn-group-sm">'+
                    '<button type="button" class="btn btn-danger cancel" data-dismiss="modal"><i class="'+__DEFAULT.cancelIcon+'"></i>&nbsp;'+__DEFAULT.cancelDesc+'</button>'+
                    '<button type="button" class="btn btn-primary submit"><i class="'+__DEFAULT.submitIcon+'"></i>&nbsp;'+__DEFAULT.submitDesc+'</button>'+
                    '</div>' +
                    '</div>' +
                    '</div>';
                return mframe;
            }
            //显示弹出框
            function showModal(mframe){
                var hmod=document.createElement("div");
                $(hmod).addClass("modal fade").attr({
                    "tabindex":"-1",
                    "role":"dialog",
                    "aria-labelledby":"myModalLabel",
                    "aria-hidden":"true",
                })
                hmod.innerHTML=mframe;
                document.body.appendChild(hmod);
                $(hmod).modal({backdrop:"static"});
                return hmod
            }

            //根据类获取对象实例
            function getObj(mod,className,typeObj){
                if (typeof typeObj == "undefined"){
                    typeObj = "div"
                }
                var obj = {}
                $(mod).find(typeObj).each(function(index,element){
                    if ($(element).hasClass(className)){
                        obj = element
                    }
                })
                return obj
            }

            //调节body高度和宽度
            function modifyBodyHeightAndWidth(mod){
                var headerObj = getObj(mod,"modal-header")
                var contentObj = getObj(mod,"modal-content")
                var bodyObj = getObj(hmode,"modal-body")
                var headHeight = $(headerObj).height()
                var contentHeight = $(contentObj).height()

                $(bodyObj).css("height",contentHeight-headHeight-65)
                $(bodyObj).css("width","-=4")
            }

            //modify location
            function modifyLocation(mod){
                // var ww = $(window).width()
                // var wh = $(window).height();
                // var mh = $(getObj(mod,"modal-content")).height()
                // //var modifyY = (wh - 2*mh)/2
                // var modifyX = (__DEFAULT.width)/2
                // $(getObj(mod,"modal-content")).offset({
                //     left:modifyX
                // })
            }

            function initfooter(mode){
                if (!__DEFAULT.cancelBtn){
                    $(getObj(mode,"cancel","button")).remove();
                }
                if (!__DEFAULT.submitBtn){
                    $(getObj(mode,"submit","button")).remove();
                }
            }

            //
            var mframe =  init()
            var hmode = showModal(mframe)
            modifyBodyHeightAndWidth(hmode)
            modifyLocation(hmode)
            //close modal when click close button in right header
            $(getObj(hmode,"modal-header")).find("button").on("click",function(){
                $(hmode).remove();
                $(".modal-backdrop.fade.in:last").remove();
            })

            // init footer
            //
            if (__DEFAULT.footerBtnStatus){
                var footer = $(getObj(hmode,"modal-body")).find(".h-modal-footer")
                if ($(footer).find("button").html()==""){
                    console.log("can not found button in modal body content")
                    $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                        console.log("no button found, default submit")
                        $(".modal-backdrop.fade.in:last").remove();
                        $(hmode).remove()
                    })
                    $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                        console.log("no button found, default cancel")
                        $(".modal-backdrop.fade.in:last").remove();
                        $(hmode).remove()
                    })
                }else{
                    $(getObj(hmode,"modal-footer")).html($(footer).html())
                    $(footer).remove()
                    if (__DEFAULT.callback == "") {
                        $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                            console.log("no callback found, default submit")
                            $(".modal-backdrop.fade.in:last").remove();
                            $(hmode).remove()
                        })
                        $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                            console.log("no callback found, default cancel")
                            $(".modal-backdrop.fade.in:last").remove();
                            $(hmode).remove()
                        })
                    } else if (typeof __DEFAULT.callback == "function"){
                        $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                            console.log("defined callback, cancel")
                            $(".modal-backdrop.fade.in:last").remove();
                            $(hmode).remove()
                        })
                        $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                            __DEFAULT.executing(hmode);
                        })
                    }
                }
            }else{
                $(getObj(hmode,"modal-footer")).remove();
                var h = $(getObj(hmode,"modal-body")).height();
                $(getObj(hmode,"modal-body")).height(h+57);
            }

            initfooter(hmode);
            document.onkeydown=function(ev) {
                var oEvent=ev||event;//获取事件对象(IE和其他浏览器不一样，这里要处理一下浏览器的兼容性event是IE；ev是chrome等)
                //Esc键的keyCode是27
                if(oEvent.keyCode==27) {
                    $(hmode).remove();
                    $(".modal-backdrop.fade.in:last").remove();
                }
            }


            // 拖动绑定
            var d = "getSelection" in window?function(){
                window.getSelection().removeAllRanges()
            }:function(){
                document.selection.empty()
            };

            var f=0,c=0,e=0,b=0,a=0;
            $(getObj(hmode,"modal-header")).bind("mousemove",function(h){
                if(a==1){
                    f=h.pageX-e;
                    c=h.pageY-b;
                    if(c<=0){
                        c=0
                    }
                    $(this).parent().offset({left:f,top:c})
                }
            }).bind("mousedown",function(h){
                d();
                e=h.pageX-$(this).parent().offset().left;
                b=h.pageY-$(this).parent().offset().top;
                a=1;
                $(getObj(hmode,"modal-header")).css({"cursor":"move"})}
            ).bind("mouseup",function(h){
                $(getObj(hmode,"modal-header")).css({"cursor":"default"});
                a=0;
                e=0;
                b=0
            }).bind("mouseleave",function(h){
                a=0;
                $(getObj(hmode,"modal-header")).css({"cursor":"default"})
            })

            // preprocess function
            if (typeof  __DEFAULT.preprocess == "function"){
                __DEFAULT.preprocess(hmode);
            }
        },
        Hspinner:function (obj) {
            var modal = document.createElement("div");

            if (obj == null || obj == undefined) {
                modal.className = "modal";
                modal.style.backgroundColor = "rgba(0, 0, 0, 0.4)";
                modal.style.display = "block";
                modal.style.zIndex = "2e9";
                var target = document.getElementsByTagName("body")[0];
                target.appendChild(modal);
                var spinner =  new Spinner({
                    color:'#ff081c',
                    lines: 12,
                }).spin(modal);
                spinner.modal = modal;
                return spinner;
            } else {
                $(obj).append(modal);
                var spinner =  new Spinner({
                    color:'#669966',
                    lines: 12,
                    className: 'spinner',
                }).spin(modal);
                spinner.modal = modal;
                return spinner;
            }
        },
        Hconfirm:function(param){
            var __DEFAULT = {
                callback : "",
                preprocess: "",
                width:"420px",
                height:"240px ",

                header:"",
                headerHeight:"30px",
                headerColor :"white",
                headerFontSize:"14px",
                headerFontColor:"#0c0c0c",
                executing:function () {
                    var spinnner = $.Hspinner();
                    $(spinnner).delay("fast").queue(function () {
                        __DEFAULT.callback();
                        spinnner.spin();
                        $(spinnner.modal).remove();
                        if($(".modal.fade.in").length == 0) {
                            $(".modal-backdrop.fade.in:last").remove();
                        }
                    })
                },
                body:"",
                footer:"",
                iconClass:"",
                cancelBtn:true,
                submitBtn:true,
            }
            $.extend(true,__DEFAULT,param)

            //初始化弹框主体
            function init(){
                var mframe='<div class="modal-dialog" style="width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-content" style="border: '+__DEFAULT.headerColor+' solid 2px; width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-header h-modal-header" style="border: none !important;background-color: '+__DEFAULT.headerColor+'; height: '+__DEFAULT.headerHeight+'; line-height: '+__DEFAULT.headerHeight+';">'+
                    '<h4 class="modal-title" style="margin-left: 15px;height: '+__DEFAULT.headerFontSize+';color: '+__DEFAULT.headerFontColor+'; line-height: '+__DEFAULT.headerHeight+';font-weight: 600; font-size: '+__DEFAULT.headerFontSize+'; margin-right: 30px;">'+__DEFAULT.header+'</h4>'+
                    '<button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="width: 30px;">×</button>'+
                    '</div>'+
                    '<div class="modal-body" style="width: '+__DEFAULT.width+'; overflow-y: auto;text-align: center"><i style="color: red;" class="'+__DEFAULT.iconClass+'"></i><br/><span style="font-size: 16px;display: block; font-weight: 600; margin-top: 15px;">'+__DEFAULT.body+'</span></div>'+
                    '<div class="modal-footer btn-group-sm" style="text-align: center; border: none;">'+
                    '<button type="button" class="btn btn-danger cancel" style="width: 120px;" data-dismiss="modal"><i class="icon-remove"></i>&nbsp;&nbsp;&nbsp;&nbsp;取消</button>'+
                    '<button type="button" class="btn btn-primary submit" style="width: 120px;margin-left: 50px;"><i class="icon-ok"></i>&nbsp;&nbsp;&nbsp;&nbsp;确定</button>'+
                    '</div>' +
                    '</div>' +
                    '</div>';
                return mframe;
            }

            //显示弹出框
            function showModal(mframe){
                var hmod=document.createElement("div");
                $(hmod).addClass("modal fade").attr({
                    "tabindex":"-1",
                    "role":"dialog",
                    "aria-labelledby":"myModalLabel",
                    "aria-hidden":"true",
                })
                hmod.innerHTML=mframe;
                document.body.appendChild(hmod);
                $(hmod).modal({backdrop:"static"});
                return hmod
            }

            //根据类获取对象实例
            function getObj(mod,className,typeObj){
                if (typeof typeObj == "undefined"){
                    typeObj = "div"
                }
                var obj = {}
                $(mod).find(typeObj).each(function(index,element){
                    if ($(element).hasClass(className)){
                        obj = element
                    }
                })
                return obj
            }

            //调节body高度和宽度
            function modifyBodyHeightAndWidth(mod){
                var headerObj = getObj(mod,"modal-header")
                var contentObj = getObj(mod,"modal-content")
                var bodyObj = getObj(hmode,"modal-body")
                var headHeight = $(headerObj).height()
                var contentHeight = $(contentObj).height()

                $(bodyObj).css("height",contentHeight-headHeight-65)
                $(bodyObj).css("width","-=4")
            }

            //modify location
            function modifyLocation(mod){
                // var ww = $(window).width()
                // var wh = document.documentElement.clientHeight;
                // var mw = $(getObj(mod,"modal-content")).width()
                // var mh = $(getObj(mod,"modal-content")).height()
                // var modifyY = (wh - 1.5*mh)/2
                // var modifyX = (ww - mw)/2
                // if (modifyY < 0){
                //     modifyY = 20
                // }
                // $(getObj(mod,"modal-content")).offset({
                //     left:modifyX,
                //     top:modifyY
                // })
            }

            function initfooter(mode){
                if (!__DEFAULT.cancelBtn){
                    $(getObj(mode,"cancel","button")).remove();
                }
                if (!__DEFAULT.submitBtn){
                    $(getObj(mode,"submit","button")).remove();
                }
            }

            //
            var mframe =  init()
            var hmode = showModal(mframe)
            modifyBodyHeightAndWidth(hmode)
            modifyLocation(hmode);

            //close modal when click close button in right header
            $(getObj(hmode,"modal-header")).find("button").on("click",function(){
                $(hmode).remove();
                $(".modal-backdrop.fade.in:last").remove();
            })

            // init footer
            var footer = $(getObj(hmode,"modal-body")).find(".h-modal-footer")
            if ($(footer).find("button").html()==""){
                console.log("can not found button in modal body content");
                $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                    console.log("no button found, default submit");
                    $(hmode).remove();
                    $(".modal-backdrop.fade.in:last").remove();
                })
                $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                    console.log("no button found, default cancel");
                    $(hmode).remove();
                    $(".modal-backdrop.fade.in:last").remove();
                })
            }else{
                $(getObj(hmode,"modal-footer")).html($(footer).html());
                $(footer).remove();
                if (__DEFAULT.callback == ""){
                    $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                        console.log("no callback found, default submit");
                        $(hmode).remove();
                        $(".modal-backdrop.fade.in:last").remove();
                    })
                    $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                        console.log("no callback found, default cancel");
                        $(hmode).remove();
                        $(".modal-backdrop.fade.in:last").remove();
                    })
                }else if (typeof __DEFAULT.callback == "function"){
                    $(getObj(getObj(hmode,"modal-footer"),"cancel","button")).on("click",function(){
                        console.log("defined callback, cancel");
                        $(hmode).remove();
                        $(".modal-backdrop.fade.in:last").remove();
                    })
                    $(getObj(getObj(hmode,"modal-footer"),"submit","button")).on("click",function(){
                        $(hmode).remove().queue(function () {
                            __DEFAULT.executing(hmode);
                        });
                    })
                }
            }
            initfooter(hmode);
            // preprocess function
            if (typeof  __DEFAULT.preprocess == "function"){
                __DEFAULT.preprocess()
            }
            // 拖动绑定
            var d = "getSelection" in window?function(){
                window.getSelection().removeAllRanges()
            }:function(){
                document.selection.empty()
            };


            document.onkeydown=function(ev) {
                var oEvent=ev||event;//获取事件对象(IE和其他浏览器不一样，这里要处理一下浏览器的兼容性event是IE；ev是chrome等)
                //Esc键的keyCode是27
                if(oEvent.keyCode==27) {
                    $(hmode).remove();
                    $(".modal-backdrop.fade.in:last").remove();
                }
            }


            var f=0,c=0,e=0,b=0,a=0;
            $(getObj(hmode,"modal-header")).bind("mousemove",function(h){
                if(a==1){
                    f=h.pageX-e;
                    c=h.pageY-b;
                    if(c<=0){
                        c=0
                    }
                    $(this).parent().offset({left:f,top:c})
                }
            }).bind("mousedown",function(h){
                d();
                e=h.pageX-$(this).parent().offset().left;
                b=h.pageY-$(this).parent().offset().top;
                a=1;
                $(getObj(hmode,"modal-header")).css({"cursor":"move"})}
            ).bind("mouseup",function(h){
                $(getObj(hmode,"modal-header")).css({"cursor":"default"});
                a=0;
                e=0;
                b=0
            }).bind("mouseleave",function(h){
                a=0;
                $(getObj(hmode,"modal-header")).css({"cursor":"default"})
            })
        },
        Hworkflow:function (param) {
            var __DEFAULT = {
                callback : "",
                preprocess: "",
                width:"800px",
                height:"494px ",

                header:"弹框信息",
                headerHeight:"40px",
                headerFontSize:"14px",
                headerFontColor:"",

                submitDesc:"提交",
                body:"",

                footer: "",
            };
            var clientWidth = document.documentElement.clientWidth*0.7;
            var clientHeight = document.documentElement.clientHeight*0.8;

            if (clientWidth < 600){
                clientWidth = 600;
            }

            if (clientHeight < 360) {
                clientHeight = 360;
            }

            __DEFAULT.width = clientWidth+"px";
            __DEFAULT.height = clientHeight+"px";

            $.extend(true,__DEFAULT,param);


            if (__DEFAULT.footer == "" || __DEFAULT.footer == undefined) {
                $(__DEFAULT.body).find(".mf-page").each(function (index, element) {
                    index = index + 1
                    if (index > 1) {
                        __DEFAULT.footer += "&nbsp;&nbsp;--&nbsp;<button class='btn btn-info' style='border-radius: 15px;'>"+index+"</button>"
                    } else {
                        __DEFAULT.footer += "<button class='btn btn-info' style='border-radius: 15px;'>"+index+"</button>"
                    }
                });
            }
            //初始化弹框主体
            function init(){
                var mframe='<div class="modal-dialog" style="width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-content h-modal-content" style="width: '+__DEFAULT.width+'; height: '+__DEFAULT.height+';">'+
                    '<div class="modal-header h-modal-header" style="height: '+__DEFAULT.headerHeight+'; line-height: '+__DEFAULT.headerHeight+'; padding: 0px;">'+
                    '<button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="height: '+__DEFAULT.headerHeight+'; line-height: '+__DEFAULT.headerHeight+'; width: 30px; padding-top: 2px;">×</button>'+
                    '<h4 class="modal-title" style="margin-left: 15px;height: '+__DEFAULT.headerFontSize+';color: '+__DEFAULT.headerFontColor+'; line-height: '+__DEFAULT.headerHeight+';font-weight: 600; font-size: '+__DEFAULT.headerFontSize+'">'+__DEFAULT.header+'</h4>'+
                    '</div>'+
                    '<div class="modal-body" style="width: '+__DEFAULT.width+'; overflow-y: auto">'+__DEFAULT.body+'</div>'+
                    '<div class="modal-footer btn-group-sm" style="text-align: center;">'+__DEFAULT.footer+
                    '<button type="button" class="btn btn-primary submit pull-right"><i class="icon-ok"></i>&nbsp;'+__DEFAULT.submitDesc+'</button>'+
                    '</div>' +
                    '</div>' +
                    '</div>';
                return mframe;
            };

            //显示弹出框
            function showModal(mframe){
                var hmod=document.createElement("div");
                $(hmod).addClass("modal fade").attr({
                    "tabindex":"-1",
                    "role":"dialog",
                    "aria-labelledby":"myModalLabel",
                    "aria-hidden":"true",
                })
                hmod.innerHTML=mframe;
                document.body.appendChild(hmod);
                $(hmod).modal({backdrop:"static"});
                return hmod
            };

            //根据类获取对象实例
            function getObj(mod,className,typeObj){
                if (typeof typeObj == "undefined"){
                    typeObj = "div"
                }
                var obj = {}
                $(mod).find(typeObj).each(function(index,element){
                    if ($(element).hasClass(className)){
                        obj = element
                    }
                })
                return obj
            };

            //调节body高度和宽度
            function modifyBodyHeightAndWidth(mod){
                var headerObj = getObj(mod,"modal-header")
                var contentObj = getObj(mod,"modal-content")
                var bodyObj = getObj(hmode,"modal-body")
                var headHeight = $(headerObj).height()
                var contentHeight = $(contentObj).height()

                $(bodyObj).css("height",contentHeight-headHeight-65)
                $(bodyObj).css("width","-=4")
            };

            //modify location
            function modifyLocation(mod){
                // var ww = $(window).width()
                // var wh = $(window).height();
                // var mw = $(getObj(mod,"modal-content")).width()
                // var mh = $(getObj(mod,"modal-content")).height()
                // //var modifyY = (wh - 2*mh)/2
                // var modifyX = (ww - mw)/2
                // $(getObj(mod,"modal-content")).offset({
                //     left:modifyX
                // })
            };

            //
            var mframe =  init();
            var hmode = showModal(mframe);
            modifyBodyHeightAndWidth(hmode);
            modifyLocation(hmode);
            //close modal when click close button in right header
            $(getObj(hmode,"modal-header")).find("button").on("click",function(){
                $(hmode).remove();
                $(".modal-backdrop.fade.in:last").remove();
            });


            // preprocess function
            if (typeof  __DEFAULT.preprocess == "function"){
                setTimeout(function () {
                    __DEFAULT.preprocess(hmode);
                },260);
            }

            $(getObj(hmode,"modal-footer")).find("button").on("click",function(){
                if (!$(this).hasClass("submit")) {
                    var text = $(this).html();
                    $(getObj(hmode,"modal-body")).find(".mf-page").each(function (index, element) {
                        var index = index + 1;
                        if (index == text) {
                            $(element).show();
                        } else {
                            $(element).hide();
                        }
                    });
                } else {
                    __DEFAULT.callback(hmode);
                    if($(".modal.fade.in").length == 0) {
                        $(".modal-backdrop.fade.in:last").remove();
                    }
                }
            });

            document.onkeydown=function(ev) {
                var oEvent=ev||event;//获取事件对象(IE和其他浏览器不一样，这里要处理一下浏览器的兼容性event是IE；ev是chrome等)
                //Esc键的keyCode是27
                if(oEvent.keyCode==27) {
                    $(hmode).remove();
                    $(".modal-backdrop.fade.in:last").remove();
                }
            }

            // 移除文本选中状态
            var d = "getSelection" in window?function(){
                window.getSelection().removeAllRanges()
            }:function(){
                document.selection.empty()
            };

            // 绑定拖动效果
            var f=0,c=0,e=0,b=0,a=0;
            $(getObj(hmode,"modal-header")).bind("mousemove",function(h){
                if(a==1){
                    f=h.pageX-e;
                    c=h.pageY-b;
                    if(c<=0){
                        c=0
                    }
                    $(this).parent().offset({left:f,top:c})
                }
            }).bind("mousedown",function(h){
                d();
                e=h.pageX-$(this).parent().offset().left;
                b=h.pageY-$(this).parent().offset().top;
                a=1;
                $(getObj(hmode,"modal-header")).css({"cursor":"move"})}
            ).bind("mouseup",function(h){
                $(getObj(hmode,"modal-header")).css({"cursor":"default"});
                a=0;
                e=0;
                b=0
            }).bind("mouseleave",function(h){
                a=0;
                $(getObj(hmode,"modal-header")).css({"cursor":"default"})
            })
        }
    })
}(jQuery));